---
title: "Effect Modification Analysis within the Propensity score Framework"
author: "Mohammad Ehsanul Karim"
format:
  html:
    toc: true
    number-sections: true
editor: visual
execute:
  cache: true
---

```{r}
#| include: false
#| echo: false
#| message: false
#| warning: false

require(table1)
require(cobalt)
require(WeightIt)
require(optmatch)
library(lmtest)
library(sandwich)
require(jtools)
require(huxtabl)
require(interactions)
require(MatchIt)
require(broom)
require(survey)
require(Publish)
require(readstata13)
require(cowplot)
require(knitr)
require(kableExtra)
require(dplyr)
require(xtable)
```

## Simulation

First, we need to install the R package `simcausal`, which can be obtained from GitHub:
```{r}
#| eval: false
devtools::install_github('osofr/simcausal', build_vignettes = FALSE)
```

We will use the following data-generation model:

```{r}
#| message: false
#| warning: false
require(simcausal)
D <- DAG.empty()
D <- D + 
  node("age", distr = "rnorm", 
       mean = 2, sd = 4) + 
  node("gender", distr = "rbern", 
       prob = plogis(4)) +
  node("education", distr = "rbern", 
       prob = plogis(3 + 5* age)) +
  node("diet", distr = "rbern", 
       prob = plogis(1 -3 * education)) +
  node("income", distr = "rbern", 
       prob = plogis(2 - 5 * education - 4 * age)) +
  node("smoking", distr = "rbern", 
       prob = plogis(1 + 1.2 * gender + 2 * age)) +
  node("hypertension", distr = "rbern", 
       prob = plogis(1 + log(3) * diet + 
                       log(1.3) * age + 
                       log(3.5) * smoking + 
                       log(0.5) * gender))
Dset <- set.DAG(D)
plotDAG(Dset)
```

We can now generate an example dataset:

```{r}
#| warning: false
Obs.Data <- sim(DAG = Dset, n = 50000, rndseed = 123)

Obs.Data$smoking <- as.character(Obs.Data$smoking)
Obs.Data$income <- as.factor(Obs.Data$income)
Obs.Data$income <- relevel(Obs.Data$income, ref = "1")
```

Sample data from the hypothetical example of association between hypertension and  smoking, where other variables such as income, age [centered], gender, education and diet also plays a role in the data generation process.
```{r}
#| echo: false
Obs.Data.copy <- Obs.Data[order(Obs.Data$age,decreasing = TRUE),]
idxx <- c("34901","9979","22220","149","10060")
Obs.Data.copy2 <- Obs.Data.copy[Obs.Data.copy$ID %in% idxx,]
Obs.Data.copy2$ID <- NULL
Obs.Data.copy2
```

## Effect measure assessment via adding interaction term

Below, we estimate a logistic regression model to assess whether the effect of smoking (the exposure) on hypertension is modified by income. The covariates age and gender are confounders.

```{r}
#| message: false
fit.w.em <- glm(hypertension ~ smoking * income + age + gender, 
            family = binomial(link = "logit"), data = Obs.Data)

require(jtools)
results.model <- summ(fit.w.em, model.info = FALSE, 
                      model.fit = FALSE,
                      exp = TRUE)
results.model
```

The interaction term in `results.model` is statistically significant.


### Presentation of effect measures {.unnumbered}
We can generate a summary report from aforementioned effect modification analysis. The table below depicts the adjusted odds ratios  for income levels (`high = 0`, and `low = 1`)
```{r}
#| warning: false
#| message: false
require(interactionR)
em.object <- interactionR(fit.w.em, 
                          exposure_names = c("income0", "smoking1"), 
                          ci.type = "mover", ci.level = 0.95, 
                          em = TRUE, recode = FALSE)

em.object$dframe[,1:4]
```

## Effect measure assessment via stratified approach

```{r}
fit.income1 <- glm(hypertension ~ smoking + age + gender, 
            family = binomial(link = "logit"), 
            data = subset(Obs.Data, income == 1))
fit.income0 <- glm(hypertension ~ smoking + age + gender, 
            family=binomial(link = "logit"), 
            data= subset(Obs.Data, income == 0))
```

The table below summarizes the adjusted odds ratios for smoking across the different income levels (`low = 1`, and `high = 0`) as obtained using the stratified approach.

```{r}
#| echo: false
fit.exp.adj.res1 <- summ(fit.income1,  
     model.info = FALSE, 
     model.fit = FALSE, 
     exp = TRUE,
     confint = TRUE)
fit.exp.adj.res0 <- summ(fit.income0, 
     model.info = FALSE, 
     model.fit = FALSE, 
     exp = TRUE,
     confint = TRUE)

cbind("Value of income" = c(1,0), 
      rbind(fit.exp.adj.res1$coeftable[2,],
            fit.exp.adj.res0$coeftable[2,]))
```

We can investigate effect modification between income (the modifier) and all covariates as follows:

```{r}
fit.all.int <- glm(hypertension ~ income * (smoking + age + gender), 
            family = binomial(link = "logit"), data = Obs.Data)
```

```{r}
#| echo: false
publish(fit.all.int, print = FALSE)$regressionTable[1:2,]
```


## Interaction
Assessment of interaction between smoking and income. We estimate a logistic regression model where

- Outcome: `hypertension`
- Exposure variables: `smoking` and `income` 
- Confounders: `age`, `gender`, and `education`

An interaction term of smoking and income is added. 

```{r}
fit.w.int <- glm(hypertension ~ smoking * income + age + gender + 
                   education, family = binomial(link = "logit"), 
                 data = Obs.Data)
results.int.model <- summ(fit.w.int, model.info = FALSE, model.fit = FALSE, 
                          exp = TRUE)
results.int.model$coeftable
```

The interaction term between income and smoking is, however, not statistically significant.


### Presentation of effect measures {.unnumbered}

```{r}
int.object = interactionR(fit.w.int, 
                          exposure_names = c("smoking1", "income0"), 
                          ci.type = "mover", ci.level = 0.95, 
                          em = FALSE, recode = FALSE)
```

Summary report from an interaction analysis when investigating association between two exposure variables (smoking and income) and hypertension. Below, `CI.ll` and `CI.ul` depict the lower and upper limits of the 95 percent confidence intervals, `OR11` = $OR_{A = 1, M = 1}$ , `OR10` = $OR_{A = 1}$, `OR01` = $OR_{M = 1}$ and `OR00` captures the reference.

```{r}
#| echo: false
int.object$dframe[,1:4]
```
