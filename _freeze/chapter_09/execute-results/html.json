{
  "hash": "44a9648852c034e70abd9e3eead5f0e4",
  "result": {
    "markdown": "---\ntitle: \"Dealing with missing data\"\nauthors:   \n  - name: Johanna Munoz\n    affiliations:\n      - ref: julius\n  - name: Thomas Debray\n    orcid: 0000-0002-1790-2719\n    affiliations:\n      - ref: smartdas\naffiliations:\n  - id: smartdas\n    name: Smart Data Analysis and Statistics B.V.\n    city: Utrecht\n  - id: julius\n    name: Julius Center for Health Sciences and Primary Care\n    city: Utrecht\nformat:\n  html:\n    toc: true\n    number-sections: true\nexecute:\n  cache: true\n---\n\n\n\n\nIn this example, we consider the estimation of comparative treatment effects in the absence of treatment-effect heterogeneity.\n\n## Setup\n\n### Prepare R environment\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-2_187d3f4d24968ead368c88bbeea88b02'}\n\n```{.r .cell-code}\nlibrary(mice)\nlibrary(dplyr)\nlibrary(ggmice)\nlibrary(MatchThem)\n```\n:::\n\n\n### Generating an observational dataset\n\nWe can simulate an observational dataset of $N = 3000$ patients as follows:\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-3_4b01f02ce2e8cdb3e633a4710cac7271'}\n\n```{.r .cell-code}\ndata_noHTE <- generate_data(n = 3000, seed = 1234) \n```\n:::\n\n\nThis dataset does not (yet) contain any missing values;\n\nThe simulated dataset contains two treatment groups with differences in baseline characteristics. For example, the figure below shows that we have baseline imbalance in age.\n\n\n::: {.cell hash='chapter_09_cache/html/fig-dist-confounders_a787fccf3e89ff25fcd2485895be1529'}\n::: {.cell-output-display}\n![Distribution of the EDSS score at each time point](chapter_09_files/figure-html/fig-dist-confounders-1.png){#fig-dist-confounders width=672}\n:::\n:::\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-5_c86818e45cbba94c5fb4a39f1f670c5d'}\n\n:::\n\n\n### Generating missing values\n\nMissing values can be generated using the function `getmissdata()`, which considers the following patterns of missingness for the previous number of relapses (`prerelapse_num`):\n\n1.  MAR: missingness depends on `age` and `sex`\n2.  MART: missingness depends on `age`, `sex` and the treatment variable `treatment`\n3.  MARTY: missingness depends on `age`, `sex`, `treatment` and the outcome variable `y`\n4.  MNAR: missingness depends on `age`, `sex` and `prerelapse_num`\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-6_e36c08f35497d57bcf1820d66f34cb68'}\n\n```{.r .cell-code}\nmdata_noHTE <- getmissdata(data_noHTE, \"MART\")\n```\n:::\n\n\nAfter introducing missing values, we only have complete data for $N=$ 946 patients.\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-7_065c61a1ddd42c4a1224090f3d51f044'}\n::: {.cell-output-display}\n```{=html}\n<div class=\"Rtable1\"><table class=\"Rtable1\"><caption>Baseline characteristics of the incomplete dataset.</caption>\n\n<thead>\n<tr>\n<th class='rowlabel firstrow lastrow'></th>\n<th class='firstrow lastrow'><span class='stratlabel'>DMF<br><span class='stratn'>(N=2265)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>TERI<br><span class='stratn'>(N=735)</span></span></th>\n<th class='firstrow lastrow'><span class='stratlabel'>Overall<br><span class='stratn'>(N=3000)</span></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class='rowlabel firstrow'>Age (years)</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>Mean (SD)</td>\n<td>44.4 (10.0)</td>\n<td>51.3 (8.72)</td>\n<td>46.2 (10.1)</td>\n</tr>\n<tr>\n<td class='rowlabel'>Median [Min, Max]</td>\n<td>45.0 [18.0, 64.0]</td>\n<td>53.0 [23.0, 64.0]</td>\n<td>47.0 [18.0, 64.0]</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Missing</td>\n<td class='lastrow'>248 (10.9%)</td>\n<td class='lastrow'>57 (7.8%)</td>\n<td class='lastrow'>305 (10.2%)</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>Female Sex</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>Yes</td>\n<td>1740 (76.8%)</td>\n<td>526 (71.6%)</td>\n<td>2266 (75.5%)</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>No</td>\n<td class='lastrow'>525 (23.2%)</td>\n<td class='lastrow'>209 (28.4%)</td>\n<td class='lastrow'>734 (24.5%)</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>Efficacy of previous DMT</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>None</td>\n<td>740 (32.7%)</td>\n<td>325 (44.2%)</td>\n<td>1065 (35.5%)</td>\n</tr>\n<tr>\n<td class='rowlabel'>Low</td>\n<td>190 (8.4%)</td>\n<td>59 (8.0%)</td>\n<td>249 (8.3%)</td>\n</tr>\n<tr>\n<td class='rowlabel'>Medium or High</td>\n<td>830 (36.6%)</td>\n<td>246 (33.5%)</td>\n<td>1076 (35.9%)</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Missing</td>\n<td class='lastrow'>505 (22.3%)</td>\n<td class='lastrow'>105 (14.3%)</td>\n<td class='lastrow'>610 (20.3%)</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>Prior medical costs</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>Mean (SD)</td>\n<td>9970 (10700)</td>\n<td>25500 (35400)</td>\n<td>13900 (21200)</td>\n</tr>\n<tr>\n<td class='rowlabel'>Median [Min, Max]</td>\n<td>6530 [164, 102000]</td>\n<td>12500 [259, 337000]</td>\n<td>7450 [164, 337000]</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Missing</td>\n<td class='lastrow'>257 (11.3%)</td>\n<td class='lastrow'>52 (7.1%)</td>\n<td class='lastrow'>309 (10.3%)</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>Number of prior symptoms</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>0</td>\n<td>157 (6.9%)</td>\n<td>58 (7.9%)</td>\n<td>215 (7.2%)</td>\n</tr>\n<tr>\n<td class='rowlabel'>1</td>\n<td>1169 (51.6%)</td>\n<td>411 (55.9%)</td>\n<td>1580 (52.7%)</td>\n</tr>\n<tr>\n<td class='rowlabel'>>=2</td>\n<td>435 (19.2%)</td>\n<td>159 (21.6%)</td>\n<td>594 (19.8%)</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Missing</td>\n<td class='lastrow'>504 (22.3%)</td>\n<td class='lastrow'>107 (14.6%)</td>\n<td class='lastrow'>611 (20.4%)</td>\n</tr>\n<tr>\n<td class='rowlabel firstrow'>Number of prior relapses</td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n<td class='firstrow'></td>\n</tr>\n<tr>\n<td class='rowlabel'>Mean (SD)</td>\n<td>0.453 (0.671)</td>\n<td>0.408 (0.646)</td>\n<td>0.436 (0.662)</td>\n</tr>\n<tr>\n<td class='rowlabel'>Median [Min, Max]</td>\n<td>0 [0, 4.00]</td>\n<td>0 [0, 3.00]</td>\n<td>0 [0, 4.00]</td>\n</tr>\n<tr>\n<td class='rowlabel lastrow'>Missing</td>\n<td class='lastrow'>1365 (60.3%)</td>\n<td class='lastrow'>152 (20.7%)</td>\n<td class='lastrow'>1517 (50.6%)</td>\n</tr>\n</tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Analysis of incomplete data\n\n### Complete Case Analysis\n\nBelow, we describe how to estimate the ATE using propensity score matching.\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-8_b458699c4978abbfbfdaf47f58821630'}\n\n```{.r .cell-code}\nimpdata <- mdata_noHTE[complete.cases(mdata_noHTE), ]\n\n# Apply Matching\nmout <- matchit(DMF ~ age + female + prevDMTefficacy + premedicalcost + prerelapse_num, \n                data = impdata,\n                family = binomial,\n                method = \"full\",\n                caliper = 0.2,\n                estimand = \"ATE\",\n                replace = FALSE) \n\nmdata <- as.data.table(match.data(mout))\nmatch_mod <- glm(\"y ~ DMF + offset(log(years))\",\n                 family = poisson(link = \"log\"),\n                 data = mdata,\n                 weights = weights)\n\n# Estimate robust variance-covariance matrix\ntx_var <- vcovCL(match_mod, cluster = ~ subclass, sandwich = TRUE) \n```\n:::\n\n\nWe can extract the treatment effect estimate as follows:\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-9_669454e380917def4741b7819861cc1b'}\n\n```{.r .cell-code}\n# Treatment effect estimate (log rate ratio)\ncoef(match_mod)[\"DMF\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       DMF \n-0.3685717 \n```\n:::\n\n```{.r .cell-code}\n# Standard error\nsqrt(tx_var[\"DMF\", \"DMF\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1521243\n```\n:::\n:::\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-10_cb8be618cb1879a2d4bb8132bc37b59d'}\n\n:::\n\n\n### Multiple Imputation (within method)\n\nIn this approach, we will generate $m=5$ imputed datasets and perform matching within each imputed dataset. We first need to specify how the variables `prevDMTefficacy`, `premedicalcost`, `numSymptoms`, `prerelapse_num` and `age` will be imputed:\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-11_8fa95122e7c1c1dd6a8b3ae571e5176b'}\n\n```{.r .cell-code}\n# We add a covariate for log(years)\nimpdata <-  mdata_noHTE %>% mutate(logyears = log(years))\n\n# Specify the conditional imputation models\nform_y <- list(prevDMTefficacy ~ age + female + logyears + premedicalcost + numSymptoms + \n                 treatment + prerelapse_num + y,\n               premedicalcost ~ age + female + logyears + prevDMTefficacy + numSymptoms + \n                 treatment + prerelapse_num + y,\n               numSymptoms ~ age + female + premedicalcost + logyears + prevDMTefficacy + \n                 prerelapse_num + treatment + y,\n               prerelapse_num ~ age + female + premedicalcost + logyears + prevDMTefficacy + \n                 numSymptoms + treatment + y,\n               age ~ prerelapse_num + female + premedicalcost + logyears + prevDMTefficacy + \n                 numSymptoms + treatment + y)\nform_y <- name.formulas(form_y)\n\n# Adopt predictive mean matching for imputing the incomplete variables\nimp0 <- mice(impdata, form = form_y, maxit = 0)\nmethod <- imp0$method\nmethod[\"numSymptoms\"] <- \"pmm\"\nmethod[\"prevDMTefficacy\"] <- \"pmm\"\n\n# Generate 5 imputed datasets\nimp <- mice(impdata, form = form_y, method = method, m = 5, maxit = 100)\n```\n:::\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-12_32c0980c9076c7b3c74d8d1e4f5b5094'}\n\n:::\n\n\nWe can now estimate the ATE using propensity score analysis in each of the imputed datasets. We here adopt full matching without replacement.\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-13_bdc3170e1b97a4f260db040128c033fb'}\n\n```{.r .cell-code}\n# Matching based on PS model\nmout <- matchthem(DMF ~ age + female + prevDMTefficacy + premedicalcost + prerelapse_num,\n                  datasets = imp,\n                  approach = \"within\",\n                  method = \"full\",\n                  caliper = 0.2,\n                  family = binomial,\n                  estimand = \"ATE\",\n                  distance = \"glm\",\n                  link = \"logit\",\n                  replace = FALSE) \n```\n:::\n\n\nThe results are then combined using Rubin's rules. We adopt robust standard errors to account for clustering of matched individuals.\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-14_0d7d89fa2a3a183ee863e2090d795d77'}\n\n```{.r .cell-code}\nmatch_mod <- summary(pool(with(mout, svyglm(y ~ DMF + offset(log(years)), \n                                            family = poisson(link = \"log\")),\n                               cluster = TRUE)), conf.int = TRUE)\n```\n:::\n\n\nWe can extract the treatment effect estimate and corresponding standard error as follows:\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-15_8df5eff81256aced2c0bfe8fbfcdad61'}\n\n```{.r .cell-code}\n# Treatment effect estimate (log rate ratio)\n(match_mod %>% filter(term == \"DMF\"))$estimate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.1554094\n```\n:::\n\n```{.r .cell-code}\n# Standard error\n(match_mod %>% filter(term == \"DMF\"))$std.error\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2202132\n```\n:::\n:::\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-16_13b55d46caa98e19e19256dd67dafd16'}\n\n:::\n\n\n### Multiple Imputation (across method)\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-17_36045282c0684477827b46e6eab3e9a2'}\n\n```{.r .cell-code}\n# Matching based on PS model\nmout <- matchthem(DMF ~ age + female + prevDMTefficacy + premedicalcost + prerelapse_num,\n                  datasets = imp,\n                  approach = \"across\",\n                  method = \"full\",\n                  caliper = 0.2,\n                  family = binomial,\n                  estimand = \"ATE\",\n                  distance = \"glm\",\n                  link = \"logit\",\n                  replace = FALSE) \n```\n:::\n\n\nThe results are then combined using Rubin's rules. We adopt robust standard errors to account for clustering of matched individuals.\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-18_603fac1d73d4eb102fa7cd1d7bc0bbbc'}\n\n```{.r .cell-code}\nmatch_mod <- summary(pool(with(mout, svyglm(y ~ DMF + offset(log(years)), \n                                            family = poisson(link = \"log\")),\n                               cluster = TRUE)), conf.int = TRUE)\n```\n:::\n\n\nWe can extract the treatment effect estimate and corresponding standard error as follows:\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-19_2c2fb1a030f58b1ccc1b35dc4accf7b2'}\n\n```{.r .cell-code}\n# Treatment effect estimate (log rate ratio)\n(match_mod %>% filter(term == \"DMF\"))$estimate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.3461563\n```\n:::\n\n```{.r .cell-code}\n# Standard error\n(match_mod %>% filter(term == \"DMF\"))$std.error\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1351187\n```\n:::\n:::\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-20_fdf3e4e3c53fe53f66852bed9a930278'}\n\n:::\n\n\n## Convergence checking\n\nWe can inspect convergence for the imputed variable `prerelapse_num` using a trace plot:\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-21_08c4a66644f2590529181a15d60822b7'}\n\n```{.r .cell-code}\nplot_trace(imp, vrb = \"prerelapse_num\")\n```\n\n::: {.cell-output-display}\n![](chapter_09_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## Results\n\nAnalysis methods:\n\n-   **Full Data**: The treatment effect is estimated in the original data of $N=3000$ patients where no missing values are present. This estimate can be used as a benchmark to compare the missing data methods.\n-   **Complete Case Analysis**: The treatment effect is estimated using all data from $N=$ 946 patients that do not have any missing values.\n-   **Missing Indicator**: The treatment effect is estimated in the incomplete dataset of $N=3000$ patients. The propensity score model includes a missing indicator variable for each incomplete covariate.\n-   **MICE (within method)**: A treatment effect is estimated within each imputed dataset using propensity score analysis. Using Rubin's rule, the five treatment effects are combined into a single treatment effect.\n-   **MICE (ITE method)**: The missing covariates and potential outcomes are imputed simultaneously. Treatment effect estimates are derived by taking the average of the individualized treatment effect estimates Y\\|DMF - Y\\|TERI.\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-22_6ca2952f7a5008c1f7c329a52bfe2173'}\n::: {.cell-output-display}\n![](chapter_09_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## Version info {.unnumbered}\nThis chapter was developed using the following version of R and its packages:\n\n\n::: {.cell hash='chapter_09_cache/html/unnamed-chunk-23_eefd185a8dab4817d7c373fff6c2fc51'}\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.3 (2023-03-15 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19044)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=Dutch_Netherlands.utf8  LC_CTYPE=Dutch_Netherlands.utf8   \n[3] LC_MONETARY=Dutch_Netherlands.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=Dutch_Netherlands.utf8    \n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] ggmice_0.0.1      table1_1.4.3      kableExtra_1.3.4  ggplot2_3.4.2    \n [5] missForest_1.5    sandwich_3.0-2    PSweight_1.1.8    MatchThem_1.0.1  \n [9] mice_3.15.0       cobalt_4.5.1      WeightIt_0.14.1   MatchIt_4.5.3    \n[13] optmatch_0.10.6   truncnorm_1.0-9   MASS_7.3-58.3     survey_4.2-1     \n[17] survival_3.5-5    Matrix_1.5-4      data.table_1.14.8 tidyr_1.3.0      \n[21] dplyr_1.1.1      \n\nloaded via a namespace (and not attached):\n [1] nlme_3.1-162         webshot_0.5.4        RColorBrewer_1.1-3  \n [4] httr_1.4.6           numDeriv_2016.8-1.1  tools_4.2.3         \n [7] backports_1.4.1      doRNG_1.8.6          utf8_1.2.3          \n[10] R6_2.5.1             DBI_1.1.3            colorspace_2.1-0    \n[13] nnet_7.3-19          withr_2.5.0          gbm_2.1.8.1         \n[16] tidyselect_1.2.0     compiler_4.2.3       cli_3.6.1           \n[19] rvest_1.0.3          see_0.7.5            xml2_1.3.3          \n[22] labeling_0.4.2       scales_1.2.1         nnls_1.4            \n[25] randomForest_4.7-1.1 systemfonts_1.0.4    stringr_1.5.0       \n[28] digest_0.6.31        minqa_1.2.5          rmarkdown_2.21      \n[31] svglite_2.1.1        pkgconfig_2.0.3      htmltools_0.5.5     \n[34] lme4_1.1-32          fastmap_1.1.1        itertools_0.1-3     \n[37] htmlwidgets_1.6.2    rlang_1.1.0          rstudioapi_0.14     \n[40] generics_0.1.3       farver_2.1.1         zoo_1.8-12          \n[43] jsonlite_1.8.4       magrittr_2.0.3       Formula_1.2-5       \n[46] Rcpp_1.0.10          munsell_0.5.0        fansi_1.0.4         \n[49] lifecycle_1.0.3      chk_0.8.1            stringi_1.7.12      \n[52] yaml_2.3.7           parallel_4.2.3       crayon_1.5.2        \n[55] lattice_0.21-8       splines_4.2.3        knitr_1.42          \n[58] pillar_1.9.0         boot_1.3-28.1        rngtools_1.5.2      \n[61] codetools_0.2-19     glue_1.6.2           evaluate_0.21       \n[64] mitools_2.4          vctrs_0.6.1          nloptr_2.0.3        \n[67] foreach_1.5.2        gtable_0.3.3         purrr_1.0.1         \n[70] xfun_0.39            SuperLearner_2.0-28  broom_1.0.4         \n[73] viridisLite_0.4.2    tibble_3.2.1         iterators_1.0.14    \n[76] gam_1.22-2           rlemon_0.2.1        \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/table1-1.0/table1_defaults.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}