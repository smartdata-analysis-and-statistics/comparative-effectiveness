{
  "hash": "dbdbc3afb057c30c0d5d862b1f8152fc",
  "result": {
    "markdown": "---\ntitle: \"Confounding adjustment using propensity score methods\"\nauthors:   \n  - name: Tammy Jiang\n    affiliations:\n      - ref: biogen\n  - name: Thomas Debray\n    orcid: 0000-0002-1790-2719\n    affiliations:\n      - ref: smartdas\naffiliations:\n  - id: smartdas\n    name: Smart Data Analysis and Statistics B.V.\n    city: Utrecht\n  - id: biogen\n    name: Biogen\n    city: Cambridge, MA, USA\nformat:\n  html:\n    toc: true\n    number-sections: true\nexecute:\n  cache: true\nbibliography: 'https://api.citedrive.com/bib/0d25b38b-db8f-43c4-b934-f4e2f3bd655a/references.bib?x=eyJpZCI6ICIwZDI1YjM4Yi1kYjhmLTQzYzQtYjkzNC1mNGUyZjNiZDY1NWEiLCAidXNlciI6ICIyNTA2IiwgInNpZ25hdHVyZSI6ICI0MGFkYjZhMzYyYWE5Y2U0MjQ2NWE2ZTQzNjlhMWY3NTk5MzhhNzUxZDNjYWIxNDlmYjM4NDgwOTYzMzY5YzFlIn0=/bibliography.bib'\n---\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-1_86686bba272635d82d9612e0a7043263'}\n\n:::\n\n\n\n\n\n\n\n## Introduction\n\nThe purpose of this document is to provide example R code that demonstrates how to estimate the propensity score and implement matching, stratification, weighting, and regression adjustment for the continuous propensity score. In this example using simulated data, we have two disease modifying therapies (DMT1 and DMT0) and the outcome is the number of post-treatment multiple sclerosis relapses during follow-up. We will estimate the average treatment effect in the treated (ATT) using propensity score matching, stratification, and weighting. We will estimate the average treatment effect in the population (ATE) using regression adjustment for the continuous propensity score. The treatment effects can be interpreted as annualized relapse rate ratios (ARR).\n\nWe consider an example dataset with the following characteristics:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-4_0becf9879db14d1c08aa3fc39cf81da6'}\n\n```{.r .cell-code}\nhead(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   age female prevDMTefficacy premedicalcost numSymptoms prerelapse_num\n1:  50      1            None        3899.61           1              1\n2:  51      0            None        9580.51           1              0\n3:  56      0            None        4785.89           1              0\n4:  44      1            None        8696.80           1              1\n5:  63      0            None        2588.03           1              0\n6:  28      1            None        5435.57           1              0\n   treatment y      years      Iscore\n1:      DMT1 0 1.78507871 Moderate A1\n2:      DMT1 0 0.01368925     High A1\n3:      DMT1 2 3.25530459     High A1\n4:      DMT1 2 5.73853525     Neutral\n5:      DMT1 0 1.31143053     High A1\n6:      DMT1 0 0.59137577 Moderate A0\n```\n:::\n:::\n\n\n\n## Comparing baseline characteristics\n\n-   `DMT1` is the treatment group and `DMT0` is the control group\n-   `prevDMTefficacy` is previous DMT efficacy (none, low efficacy, and medium/high efficacy)\n-   `prerelapse_num` is the number of previous MS relapses\n\n\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-6_3947b659d0cfa46b255edb91f9de9c6a'}\n::: {.cell-output-display}\n|                           |DMT0         |DMT1         |\n|:--------------------------|:------------|:------------|\n|n                          |2300         |7700         |\n|age (mean (SD))            |51.39 (8.32) |44.25 (9.79) |\n|female = 1 (%)             |1671 (72.65) |5915 (76.82) |\n|prevDMTefficacy (%)        |             |             |\n|None                       |1247 (54.22) |3171 (41.18) |\n|Low_efficacy               |261 (11.35)  |858 (11.14)  |\n|Medium_high_efficacy       |792 (34.43)  |3671 (47.68) |\n|prerelapse_num (mean (SD)) |0.39 (0.62)  |0.46 (0.68)  |\n:::\n:::\n\n\n\n## Estimating the propensity score\n\n### Logistic regression\n\nWe sought to restore balance in the distribution of baseline covariates in patients treated with DMT1 (index treatment) and DMT0 (control tratment). We fit a multivariable logistic regression model in which treatment was regressed on baseline characteristics including age, sex, previous DMT efficacy, and previous number of relapses.\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-7_6550ae002444a6b8e3677b76267b7851'}\n\n```{.r .cell-code}\n# Fit logistic regression model\nps.model <- glm(treatment ~ age + female + prevDMTefficacy + prerelapse_num, \n                data = dat, family = binomial())\n\n# Summary of logistic regression model\nsummary(ps.model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = treatment ~ age + female + prevDMTefficacy + prerelapse_num, \n    family = binomial(), data = dat)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.7949   0.2585   0.5220   0.7478   1.5033  \n\nCoefficients:\n                                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                          4.809473   0.157127  30.609  < 2e-16 ***\nage                                 -0.086708   0.002996 -28.939  < 2e-16 ***\nfemale1                              0.253611   0.057664   4.398 1.09e-05 ***\nprevDMTefficacyLow_efficacy          0.310394   0.083022   3.739 0.000185 ***\nprevDMTefficacyMedium_high_efficacy  0.660266   0.054393  12.139  < 2e-16 ***\nprerelapse_num                       0.156318   0.039288   3.979 6.93e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 10786  on 9999  degrees of freedom\nResidual deviance:  9597  on 9994  degrees of freedom\nAIC: 9609\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n\n```{.r .cell-code}\n# Extract propensity scores\ndat$ps <- predict(ps.model, data = dat, type = \"response\")\n```\n:::\n\n\n\n### Assessing overlap\n\nWe examined the degree of overlap in the distribution of propensity scores across treatment groups using histograms and side-by-side box plots.\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-8_01f9289e23dfb0fa7d2820c9b08ccbbf'}\n\n```{.r .cell-code}\n# Histogram\nggplot(dat, aes(x = ps, fill = as.factor(treatment), color = as.factor(treatment))) + \n  geom_histogram(alpha = 0.3, position='identity', bins = 15) + \n  facet_grid(as.factor(treatment) ~ .) + \n  xlab(\"Probability of Treatment\") + \n  ylab(\"Count\") +\n  ggtitle(\"Propensity Score Distribution by Treatment Group\") +\n  theme(legend.position = \"bottom\", legend.direction = \"vertical\")\n```\n\n::: {.cell-output-display}\n![](chapter_06_files/figure-pdf/unnamed-chunk-8-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Side-by-side box plots\nggplot(dat, aes(x=as.factor(treatment), y=ps, fill=as.factor(treatment))) +\n  geom_boxplot() + \n  ggtitle(\"Propensity Score Distribution by Treatment Group\") +\n  ylab(\"Probability of Treatment\") + \n  xlab(\"Treatment group\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](chapter_06_files/figure-pdf/unnamed-chunk-8-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# Distribution of propensity scores by treatment groups\nsummary(dat$ps[dat$treatment == \"DMT1\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.3230  0.7214  0.8265  0.7970  0.9010  0.9854 \n```\n:::\n\n```{.r .cell-code}\nsummary(dat$ps[dat$treatment == \"DMT0\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.3230  0.5730  0.6894  0.6795  0.7975  0.9799 \n```\n:::\n:::\n\n\n\n## Propensity score matching\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-9_a586495e3bec4dbb5d9c1016bcd8f489'}\n\n:::\n\n\n\n### 1:1 Optimal full matching without replacement\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-10_62efed77b3b857a15017d1a55dab9a19'}\n\n```{.r .cell-code}\nlibrary(MatchIt)\n\n# Use MatchIt package for PS matching\nopt <- matchit(treatment ~ age + female + prevDMTefficacy + prerelapse_num, \n               data = dat, \n               method = \"full\",\n               estimand = \"ATT\")\n\nopt\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nA matchit object\n - method: Optimal full matching\n - distance: Propensity score\n             - estimated with logistic regression\n - number of obs.: 10000 (original), 10000 (matched)\n - target estimand: ATT\n - covariates: age, female, prevDMTefficacy, prerelapse_num\n```\n:::\n:::\n\n\n\n### Assess balance after matching\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-11_86aa1dafa76229bc608109a3517389f6'}\n\n```{.r .cell-code}\nsummary(opt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nmatchit(formula = treatment ~ age + female + prevDMTefficacy + \n    prerelapse_num, data = dat, method = \"full\", estimand = \"ATT\")\n\nSummary of Balance for All Data:\n                                    Means Treated Means Control Std. Mean Diff.\ndistance                                   0.7970        0.6795          0.8943\nage                                       44.2496       51.3883         -0.7289\nfemale0                                    0.2318        0.2735         -0.0987\nfemale1                                    0.7682        0.7265          0.0987\nprevDMTefficacyNone                        0.4118        0.5422         -0.2649\nprevDMTefficacyLow_efficacy                0.1114        0.1135         -0.0065\nprevDMTefficacyMedium_high_efficacy        0.4768        0.3443          0.2651\nprerelapse_num                             0.4595        0.3930          0.0976\n                                    Var. Ratio eCDF Mean eCDF Max\ndistance                                0.7873    0.1917   0.3379\nage                                     1.3868    0.1519   0.3085\nfemale0                                      .    0.0417   0.0417\nfemale1                                      .    0.0417   0.0417\nprevDMTefficacyNone                          .    0.1304   0.1304\nprevDMTefficacyLow_efficacy                  .    0.0020   0.0020\nprevDMTefficacyMedium_high_efficacy          .    0.1324   0.1324\nprerelapse_num                          1.1990    0.0133   0.0383\n\nSummary of Balance for Matched Data:\n                                    Means Treated Means Control Std. Mean Diff.\ndistance                                   0.7970        0.7970          0.0001\nage                                       44.2496       44.1364          0.0116\nfemale0                                    0.2318        0.2517         -0.0470\nfemale1                                    0.7682        0.7483          0.0470\nprevDMTefficacyNone                        0.4118        0.4157         -0.0079\nprevDMTefficacyLow_efficacy                0.1114        0.1224         -0.0347\nprevDMTefficacyMedium_high_efficacy        0.4768        0.4619          0.0297\nprerelapse_num                             0.4595        0.4654         -0.0087\n                                    Var. Ratio eCDF Mean eCDF Max\ndistance                                0.9955    0.0012   0.0116\nage                                     1.0161    0.0076   0.0260\nfemale0                                      .    0.0199   0.0199\nfemale1                                      .    0.0199   0.0199\nprevDMTefficacyNone                          .    0.0039   0.0039\nprevDMTefficacyLow_efficacy                  .    0.0109   0.0109\nprevDMTefficacyMedium_high_efficacy          .    0.0148   0.0148\nprerelapse_num                          0.9530    0.0057   0.0110\n                                    Std. Pair Dist.\ndistance                                     0.0022\nage                                          0.1688\nfemale0                                      0.5149\nfemale1                                      0.5149\nprevDMTefficacyNone                          0.1816\nprevDMTefficacyLow_efficacy                  0.5944\nprevDMTefficacyMedium_high_efficacy          0.4731\nprerelapse_num                               0.3893\n\nSample Sizes:\n              Control Treated\nAll           2300.      7700\nMatched (ESS)  198.89    7700\nMatched       2300.      7700\nUnmatched        0.         0\nDiscarded        0.         0\n```\n:::\n\n```{.r .cell-code}\nplot(summary(opt))\n```\n\n::: {.cell-output-display}\n![](chapter_06_files/figure-pdf/unnamed-chunk-11-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# black line is treated group, grey line is control group\nplot(opt, type = \"density\", which.xs = vars) \n```\n\n::: {.cell-output-display}\n![](chapter_06_files/figure-pdf/unnamed-chunk-11-2.pdf){fig-pos='H'}\n:::\n\n::: {.cell-output-display}\n![](chapter_06_files/figure-pdf/unnamed-chunk-11-3.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n### Estimating the ATT\n\nWe can estimate the ATT in the matched sample using Poisson regression in which the number of post-treatment relapses is regressed on treatment status and follow-up time for each patient (captured by the variable `years`). More details are provided at \\url{https://cran.r-project.org/web/packages/MatchIt/vignettes/estimating-effects.html}.\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-12_b857924c4c4fff3d01e139a50b386967'}\n\n```{.r .cell-code}\n# Matched data\nmatched.data <- match.data(opt)\n\n# Poisson regression model\nopt.fit <- glm(y ~ treatment + offset(log(years)), \n            family = poisson(link = \"log\"),\n            data = matched.data, \n            weights = weights)\n\n# Treatment effect estimation\nopt.comp <- comparisons(opt.fit,\n                        variables = \"treatment\",\n                        vcov = ~subclass,\n                        newdata = subset(matched.data, treatment == \"DMT1\"),\n                        wts = \"weights\",\n                        transform_pre = \"ratio\")\n\nopt.comp |> tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 9\n  type     term      contrast   estim~1 std.e~2 stati~3  p.value conf.~4 conf.~5\n  <chr>    <chr>     <chr>        <dbl>   <dbl>   <dbl>    <dbl>   <dbl>   <dbl>\n1 response treatment mean(DMT1~   0.761   0.100    7.59 3.21e-14   0.564   0.958\n# ... with abbreviated variable names 1: estimate, 2: std.error, 3: statistic,\n#   4: conf.low, 5: conf.high\n```\n:::\n:::\n\n\n\n\n\nAs indicated in the summary output above, the annualized relapse rate ratio for DMT1 vs DMT0 among patients treated with DMT0 (ATT) is given as 0.76 with a 95% confidence interval ranging from 0.56 to 0.96.\n\n## Propensity score stratification\n\n### Divide sample into quintiles of propensity scores\n\nWe will form five mutually exclusive groups of the estimated propensity score.\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-14_bbcd571b7f2aed8480b0e3fd4f666201'}\n\n```{.r .cell-code}\n# Create five strata\ndat <- dat %>% mutate(ps.strata = cut(ps, \n                                      breaks = c(quantile(ps, probs=seq(0,1,0.2))),\n                                      labels = seq(1:5),\n                                      include.lowest = TRUE))\n\n# Number of patients in each stratum\ntable(dat$ps.strata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   1    2    3    4    5 \n2002 2015 1991 1997 1995 \n```\n:::\n:::\n\n\n\n### Assess balance within each propensity score stratum\n\nWithin each propensity score stratum, treated and control patients should have similar values of the propensity score and the distribution of baseline covariates should be approximately balanced between treatment groups.\n\n#### Propensity Score Stratum #1\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-15_0064af878791e5dd0a7634dda8bd665e'}\n\n```{.r .cell-code}\ntab1.strata1 <- CreateTableOne(vars, data = dat %>% filter(ps.strata == 1), \n                               factorVars = c(\"female\", \"prevDMTefficacy\"), \n                               strata = \"treatment\", test = FALSE)\n\ntab1.strata1.print <- print(tab1.strata1, catDigits = 2, contDigits = 2, \n                            smd = TRUE)\n```\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-16_d30f73d64f7065af2e9fe774bde920c3'}\n::: {.cell-output-display}\n|                           |DMT0         |DMT1         |SMD   |\n|:--------------------------|:------------|:------------|:-----|\n|n                          |901          |1101         |      |\n|age (mean (SD))            |58.38 (3.67) |57.45 (3.73) |0.251 |\n|female = 1 (%)             |605 (67.15)  |775 (70.39)  |0.070 |\n|prevDMTefficacy (%)        |             |             |0.056 |\n|None                       |650 (72.14)  |771 (70.03)  |      |\n|Low_efficacy               |106 (11.76)  |130 (11.81)  |      |\n|Medium_high_efficacy       |145 (16.09)  |200 (18.17)  |      |\n|prerelapse_num (mean (SD)) |0.29 (0.53)  |0.33 (0.56)  |0.074 |\n:::\n:::\n\n\n\n#### Propensity Score Stratum #2\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-17_f98a4353a549171493d0773c9b3f03e8'}\n\n```{.r .cell-code}\ntab1.strata2 <- CreateTableOne(vars, data = dat %>% filter(ps.strata == 2), \n                               factorVars = c(\"female\", \"prevDMTefficacy\"), \n                               strata = \"treatment\", test = FALSE)\n\ntab1.strata2.print <- print(tab1.strata2, catDigits = 2, contDigits = 2, \n                            smd = TRUE)\n```\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-18_66eb1bc3568d8ca686eddb83c7ac505a'}\n::: {.cell-output-display}\n|                           |DMT0         |DMT1         |SMD   |\n|:--------------------------|:------------|:------------|:-----|\n|n                          |617          |1398         |      |\n|age (mean (SD))            |52.18 (4.35) |51.97 (4.22) |0.049 |\n|female = 1 (%)             |458 (74.23)  |1048 (74.96) |0.017 |\n|prevDMTefficacy (%)        |             |             |0.054 |\n|None                       |292 (47.33)  |624 (44.64)  |      |\n|Low_efficacy               |69 (11.18)   |162 (11.59)  |      |\n|Medium_high_efficacy       |256 (41.49)  |612 (43.78)  |      |\n|prerelapse_num (mean (SD)) |0.40 (0.64)  |0.41 (0.66)  |0.004 |\n:::\n:::\n\n\n\n#### Propensity Score Stratum #3\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-19_9dcaf7edd0ac14d6521318a072f875ac'}\n\n```{.r .cell-code}\ntab1.strata3 <- CreateTableOne(vars, data = dat %>% filter(ps.strata == 3), \n                               factorVars = c(\"female\", \"prevDMTefficacy\"), \n                               strata = \"treatment\", test = FALSE)\n\ntab1.strata3.print <- print(tab1.strata3, catDigits = 2, contDigits = 2, \n                            smd = TRUE)\n```\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-20_fca16a4eaf50af7e1b136a19f5713ea2'}\n::: {.cell-output-display}\n|                           |DMT0         |DMT1         |SMD   |\n|:--------------------------|:------------|:------------|:-----|\n|n                          |392          |1599         |      |\n|age (mean (SD))            |46.73 (4.06) |46.36 (4.08) |0.092 |\n|female = 1 (%)             |305 (77.81)  |1193 (74.61) |0.075 |\n|prevDMTefficacy (%)        |             |             |0.041 |\n|None                       |168 (42.86)  |687 (42.96)  |      |\n|Low_efficacy               |52 (13.27)   |191 (11.94)  |      |\n|Medium_high_efficacy       |172 (43.88)  |721 (45.09)  |      |\n|prerelapse_num (mean (SD)) |0.49 (0.68)  |0.47 (0.66)  |0.031 |\n:::\n:::\n\n\n\n#### Propensity Score Stratum #4\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-21_3827efda660c64769b4aae16d8d25444'}\n\n```{.r .cell-code}\ntab1.strata4 <- CreateTableOne(vars, data = dat %>% filter(ps.strata == 4), \n                               factorVars = c(\"female\", \"prevDMTefficacy\"), \n                               strata = \"treatment\", test = FALSE)\n\ntab1.strata4.print <- print(tab1.strata4, catDigits = 2, contDigits = 2, \n                            smd = TRUE)\n```\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-22_b5448a3f87ea58b4ba8b3a92be6589f9'}\n::: {.cell-output-display}\n|                           |DMT0         |DMT1         |SMD   |\n|:--------------------------|:------------|:------------|:-----|\n|n                          |269          |1728         |      |\n|age (mean (SD))            |41.07 (4.11) |40.88 (4.29) |0.046 |\n|female = 1 (%)             |203 (75.46)  |1356 (78.47) |0.071 |\n|prevDMTefficacy (%)        |             |             |0.084 |\n|None                       |105 (39.03)  |634 (36.69)  |      |\n|Low_efficacy               |22 ( 8.18)   |181 (10.47)  |      |\n|Medium_high_efficacy       |142 (52.79)  |913 (52.84)  |      |\n|prerelapse_num (mean (SD)) |0.50 (0.69)  |0.51 (0.71)  |0.012 |\n:::\n:::\n\n\n\n#### Propensity Score Stratum #5\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-23_384e661279e34dfbf71b5236dc36262e'}\n\n```{.r .cell-code}\ntab1.strata5 <- CreateTableOne(vars, data = dat %>% filter(ps.strata == 5), \n                               factorVars = c(\"female\", \"prevDMTefficacy\"), \n                               strata = \"treatment\", test = FALSE)\n\ntab1.strata5.print <- print(tab1.strata5, catDigits = 2, contDigits = 2, \n                            smd = TRUE)\n```\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-24_e1ea2962f876eb849dc77834923f48bc'}\n::: {.cell-output-display}\n|                           |DMT0         |DMT1         |SMD   |\n|:--------------------------|:------------|:------------|:-----|\n|n                          |121          |1874         |      |\n|age (mean (SD))            |33.26 (4.95) |32.04 (5.58) |0.233 |\n|female = 1 (%)             |100 (82.64)  |1543 (82.34) |0.008 |\n|prevDMTefficacy (%)        |             |             |0.050 |\n|None                       |32 (26.45)   |455 (24.28)  |      |\n|Low_efficacy               |12 ( 9.92)   |194 (10.35)  |      |\n|Medium_high_efficacy       |77 (63.64)   |1225 (65.37) |      |\n|prerelapse_num (mean (SD)) |0.52 (0.66)  |0.52 (0.73)  |0.004 |\n:::\n:::\n\n\n\n### Estimating and pooling of stratum-specific treatment effects\n\nThe overall ATT across strata can be estimated by weighting stratum-specific estimates by the proportion of treated patients in each stratum over all treated patients in the sample.\n\nWe first define a function `att.strata.function()` to calculate stratum-specific estimates of the treatment effect:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-25_4dcd8721b82eba6c1e5ccf62eac9fbe2'}\n\n```{.r .cell-code}\natt.strata.function <- function(data, stratum, confint = TRUE) {\n\n  fit <- glm(\"y ~ treatment + offset(log(years))\",\n      family = poisson(link = \"log\"),\n      data = data %>% filter(ps.strata == stratum))\n\n  arr <- round(as.numeric(exp(coef(fit)[\"treatmentDMT1\"])), digits = 3)\n  ll <- ul <- NA\n  \n  if (confint) {\n    ll <- round(exp(confint(fit))[\"treatmentDMT1\",1], digits = 3)\n    ul <- round(exp(confint(fit))[\"treatmentDMT1\",2], digits = 3)\n  }\n  \n  return(c(\"stratum\" = stratum,\n           \"arr\" = arr,\n           \"ci_lower\"  = ll,\n           \"ci_upper\"  = ul))\n}\n\narr.strata <- as.data.frame(t(sapply(1:5, att.strata.function, data = dat)))\narr.strata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  stratum   arr ci_lower ci_upper\n1       1 0.904    0.760    1.076\n2       2 0.822    0.696    0.975\n3       3 0.798    0.666    0.961\n4       4 0.716    0.587    0.881\n5       5 0.589    0.463    0.761\n```\n:::\n:::\n\n\n\nSubsequently, we define a function `weights.strata.function()` to calculate the weights for each stratum. The weight is the proportion of treated patients in each stratum over all treated patients in the sample:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-26_d9eb5f1fe581d5d37b28c3111d5b7ead'}\n\n```{.r .cell-code}\nweights.strata.function <- function(data, stratum) {\n  n_DMT1_stratum <- nrow(data %>% filter(ps.strata == stratum & treatment == \"DMT1\"))\n  n_DMT1_all <- nrow(data %>% filter(treatment == \"DMT1\"))\n  weight <- n_DMT1_stratum/n_DMT1_all\n  return(c(\"stratum\" = stratum, \"weight\" = weight))\n}\n\nweights.strata <- as.data.frame(t(sapply(1:5, weights.strata.function, data = dat)))\nweights.strata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  stratum    weight\n1       1 0.1429870\n2       2 0.1815584\n3       3 0.2076623\n4       4 0.2244156\n5       5 0.2433766\n```\n:::\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-27_8fc5d0f1582cd3e48173982edd115457'}\n\n```{.r .cell-code}\n# Create table with ARRs and weights for each PS stratum\narr.weights.merged <- merge(arr.strata, weights.strata, by = \"stratum\")\n\n# Calculate the weighted ARR for each stratum\narr.weights.merged <- arr.weights.merged %>%\n  mutate(weighted.arr = as.numeric(arr) * weight)\n\n# Sum the weighted ARRs across strata to get the overall ATT\nsum(arr.weights.merged$weighted.arr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7482462\n```\n:::\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-28_50cc03646dca554c1b2be3070e5264d1'}\n\n:::\n\n\n\nWe now define a new function `ps.stratification.bootstrap()` that integrates estimation of the ATT and the PS weights for bootstrapping purposes:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-29_123f971afdea9da3d3fb11fc64269b68'}\n\n```{.r .cell-code}\nps.stratification.bootstrap <- function(data, inds) {\n  d <- data[inds,]\n  \n  d$ps.strata <- cut(d$ps, \n                       breaks = c(quantile(dat$ps, probs = seq(0, 1, by = 0.2))),\n                       labels = seq(5),\n                       include.lowest = TRUE)\n  \n  arr.strata <- as.data.frame(t(sapply(1:5, att.strata.function, \n                                       data = d, confint = FALSE)))\n  \n  weights.strata <- as.data.frame(t(sapply(1:5, weights.strata.function, data = d)))\n  \n  return(arr.strata$arr[1] * weights.strata$weight[1] + \n           arr.strata$arr[2] * weights.strata$weight[2] +\n           arr.strata$arr[3] * weights.strata$weight[3] + \n           arr.strata$arr[4] * weights.strata$weight[4] +\n           arr.strata$arr[5] * weights.strata$weight[5])                                                  \n}\n```\n:::\n\n\n\nWe can now estimate the treatment effect and its confidence interval using the bootstrap procedure:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-30_aff7212925078d7abcc3cdb6fdb926fb'}\n\n```{.r .cell-code}\nlibrary(boot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'boot'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:survival':\n\n    aml\n```\n:::\n\n```{.r .cell-code}\nset.seed(1854)\narr.stratification.boot <- boot(data = dat, \n                                statistic = ps.stratification.bootstrap, \n                                R = 1000)\n\n# Bootstrapped ARR\nmedian(arr.stratification.boot$t)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7558609\n```\n:::\n\n```{.r .cell-code}\n# Bootstrapped ARR 95% CI\nquantile(arr.stratification.boot$t[,1], c(0.025, 0.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     2.5%     97.5% \n0.6835885 0.8362947 \n```\n:::\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-31_cb1c97adcd1288a8081c7949cad2d986'}\n\n:::\n\n\n\n## Propensity score weighting\n\n### Calculate propensity score weights for ATT\n\nPropensity score weighting reweights the study sample to generate an artificial population (i.e., pseudo-population) in which the covariates are no longer associated with treatment, thereby removing confounding by measured covariates. For the ATT, the weight for all treated patients is set to one. Conversely, the weight for patients in the control group is set to the propensity score divided by one minus the propensity score, that is, (PS/(1 − PS)). We estimated stabilized weights to address extreme weights.\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-32_b999412c45eb9abee0a13ff8b44f4154'}\n\n```{.r .cell-code}\nlibrary(WeightIt)\n\nw.out <- weightit(treatment ~ age + female + prevDMTefficacy + prerelapse_num,\n                  data = dat,\n                  method = \"ps\",\n                  estimand = \"ATT\")\n                  #stabilize = TRUE)\n\nw.out\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nA weightit object\n - method: \"ps\" (propensity score weighting)\n - number of obs.: 10000\n - sampling weights: none\n - treatment: 2-category\n - estimand: ATT (focal: DMT1)\n - covariates: age, female, prevDMTefficacy, prerelapse_num\n```\n:::\n\n```{.r .cell-code}\nsummary(w.out)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 Summary of weights\n\n- Weight ranges:\n\n        Min                                   Max\nDMT0 0.4772 |---------------------------| 48.6856\nDMT1 1.0000  ||                            1.0000\n\n- Units with 5 most extreme weights by group:\n                                             \n         9492    8836    6544    9610    4729\n DMT0 32.1027 32.1027 34.3126 38.1817 48.6856\n            6       4       3       2       1\n DMT1       1       1       1       1       1\n\n- Weight statistics:\n\n     Coef of Var   MAD Entropy # Zeros\nDMT0       1.098 0.673   0.383       0\nDMT1       0.000 0.000  -0.000       0\n\n- Effective Sample Sizes:\n\n              DMT0 DMT1\nUnweighted 2300.   7700\nWeighted   1043.16 7700\n```\n:::\n\n```{.r .cell-code}\nplot(summary(w.out))\n```\n\n::: {.cell-output-display}\n![](chapter_06_files/figure-pdf/unnamed-chunk-32-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n### Assess balance in the weighted sample\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-33_d3306ff75f03121efdd204de2c010564'}\n\n```{.r .cell-code}\nbal.tab(w.out, stats = c(\"m\", \"v\"), thresholds = c(m = .05))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nBalance Measures\n                                         Type Diff.Adj     M.Threshold\nprop.score                           Distance  -0.0045 Balanced, <0.05\nage                                   Contin.   0.0054 Balanced, <0.05\nfemale                                 Binary   0.0005 Balanced, <0.05\nprevDMTefficacy_None                   Binary  -0.0003 Balanced, <0.05\nprevDMTefficacy_Low_efficacy           Binary   0.0023 Balanced, <0.05\nprevDMTefficacy_Medium_high_efficacy   Binary  -0.0020 Balanced, <0.05\nprerelapse_num                        Contin.  -0.0034 Balanced, <0.05\n                                     V.Ratio.Adj\nprop.score                                0.9926\nage                                       1.0102\nfemale                                         .\nprevDMTefficacy_None                           .\nprevDMTefficacy_Low_efficacy                   .\nprevDMTefficacy_Medium_high_efficacy           .\nprerelapse_num                            1.0941\n\nBalance tally for mean differences\n                    count\nBalanced, <0.05         7\nNot Balanced, >0.05     0\n\nVariable with the greatest mean difference\n Variable Diff.Adj     M.Threshold\n      age   0.0054 Balanced, <0.05\n\nEffective sample sizes\n              DMT0 DMT1\nUnadjusted 2300.   7700\nAdjusted   1043.16 7700\n```\n:::\n:::\n\n\n\n### Estimate the ATT\n\nOne way to estimate the ATT is to use the survey package. The function `svyglm()` generates model-robust (Horvitz-Thompson-type) standard errors by default, and thus does not require additional adjustments.\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-34_7e2786b55e589700c2beb7b4b116e9c6'}\n\n```{.r .cell-code}\nlibrary(survey)\n\nweighted.data <- svydesign(ids = ~1, data = dat, weights = ~w.out$weights)\n\nweighted.fit <- svyglm(y ~ treatment + offset(log(years)),\n                       family = poisson(link = \"log\"),\n                       design = weighted.data)\n\nexp(coef(weighted.fit)[\"treatmentDMT1\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntreatmentDMT1 \n    0.7083381 \n```\n:::\n\n```{.r .cell-code}\nexp(confint(weighted.fit))[\"treatmentDMT1\",] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    2.5 %    97.5 % \n0.6245507 0.8033662 \n```\n:::\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-35_696471506079ed3c0d8d80b17345df4b'}\n\n:::\n\n\n\nAs indicated above, propensity score weighting yielded an ATT estimate of 0.71 (95% CI: 0.66; 0.76).\n\nAn alternative approach is to use `glm()` to estimate the treatment effect and calculate robust standard errors.\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-36_efa6cf69637da7af44ccdd38fff957c6'}\n\n```{.r .cell-code}\n# Alternative way to estimate treatment effect\nweighted.fit2 <- glm(y ~ treatment + offset(log(years)),\n              family = poisson(link = \"log\"),\n              data = dat,\n              weights = w.out$weights)\n\n# Extract the estimated ARR\nexp(coef(weighted.fit2))[\"treatmentDMT1\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntreatmentDMT1 \n    0.7083381 \n```\n:::\n\n```{.r .cell-code}\n# Calculate robust standard error and p-value of the log ARR\ncoeftest(weighted.fit2, vcov. = vcovHC)[\"treatmentDMT1\",]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Estimate    Std. Error       z value      Pr(>|z|) \n-3.448337e-01  6.442745e-02 -5.352280e+00  8.685284e-08 \n```\n:::\n\n```{.r .cell-code}\n# Derive 95% confidence interval of the ARR\nexp(lmtest::coefci(weighted.fit2, \n       level = 0.95, # 95% confidence interval\n       vcov. = vcovHC)[\"treatmentDMT1\",])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    2.5 %    97.5 % \n0.6243094 0.8036767 \n```\n:::\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-37_1b0dfd3140631979a9f8d32d8904417e'}\n\n:::\n\n\n\nUsing this approach, the ATT estimate was 0.71 (95% CI: 0.62; 0.8).\n\n## Regression adjustment for the propensity score for the ATE\n\nIn this approach, a regression model is fitted to describe the observed outcome as a function of the received treatment and the estimated propensity score:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-38_51be955972c301d0d29f109e13c3baad'}\n\n```{.r .cell-code}\nps.reg.fit <- glm(y ~ treatment + ps + offset(log(years)),\n                  family = poisson(link = \"log\"),\n                  data = dat)\n\nsummary(ps.reg.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = y ~ treatment + ps + offset(log(years)), family = poisson(link = \"log\"), \n    data = dat)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.0160  -0.7336  -0.4441  -0.1352   4.2634  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   -1.99585    0.10359 -19.266  < 2e-16 ***\ntreatmentDMT1 -0.25598    0.04431  -5.777 7.60e-09 ***\nps             1.07521    0.13878   7.748 9.36e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 7514.7  on 9999  degrees of freedom\nResidual deviance: 7443.0  on 9997  degrees of freedom\nAIC: 12378\n\nNumber of Fisher Scoring iterations: 6\n```\n:::\n\n```{.r .cell-code}\n# ATE\nexp(coef(ps.reg.fit))[\"treatmentDMT1\"] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntreatmentDMT1 \n    0.7741606 \n```\n:::\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-39_04f28ff2f386252c683e53cbeacc2da4'}\n::: {.cell-output .cell-output-stderr}\n```\nWaiting for profiling to be done...\nWaiting for profiling to be done...\n```\n:::\n:::\n\n\n\nBootstrapped confidence intervals can be obtained as follows:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-40_4d76ab1ca32eef35f229bacb11ab4dbe'}\n\n```{.r .cell-code}\n# Function to bootstrap for 95% CIs\nps.reg.bootstrap <- function(data, inds) {\n  d <- data[inds,]\n  \n  fit <- glm(y ~ treatment + ps + offset(log(years)),\n              family = poisson(link = \"log\"),\n              data = d)\n  \n  return(exp(coef(fit))[\"treatmentDMT1\"])\n}\n\nset.seed(1854)\n\n# Generate 1000 bootstrap replicates\narr.boot <- boot(dat, statistic = ps.reg.bootstrap, R = 1000) \n\n# Extract the median annualized relapse rate across 1000 bootstrap replicates\nmedian(arr.boot$t) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7750426\n```\n:::\n\n```{.r .cell-code}\n# Take 2.5th and 97.5th percentiles to be 95% CI\nquantile(arr.boot$t[,1], c(0.025, 0.975)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     2.5%     97.5% \n0.7010540 0.8545169 \n```\n:::\n:::\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-41_cc944833ceba84f377a489ebcb1ad255'}\n\n:::\n\n\n\n## Overview\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-42_bc5c4ed874a60cd1dc602e0f098d9182'}\n::: {.cell-output-display}\n|Method                                               |Estimand |  Estimate| 95% CI (lower)| 95% CI (upper)|\n|:----------------------------------------------------|:--------|---------:|--------------:|--------------:|\n|Optimal full matching                                |ATT      | 0.7610138|      0.5644807|      0.9575469|\n|Propensity score stratification                      |ATT      | 0.7482462|             NA|             NA|\n|Propensity score stratification (with bootstrapping) |ATT      | 0.7558609|      0.6835885|      0.8362947|\n|Propensity score weighting                           |ATT      | 0.7083381|      0.6245507|      0.8033662|\n|Propensity score weighting (robust SE)               |ATT      | 0.7083381|      0.6243094|      0.8036767|\n|PS regression adjustment                             |ATE      | 0.7741606|      0.7101080|      0.8448218|\n|PS regression adjustment (bootstrapping)             |ATE      | 0.7750426|      0.7010540|      0.8545169|\n:::\n:::\n\n\n\n## Version info {.unnumbered}\nThis chapter was rendered using the following version of R and its packages:\n\n\n\n::: {.cell hash='chapter_06_cache/pdf/unnamed-chunk-43_c2ac4e4f452385394948599703b388ff'}\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.4\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Zurich\ntzcode source: internal\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] WeightIt_0.14.2        boot_1.3-28.1          MatchIt_4.5.4         \n [4] sandwich_3.0-2         truncnorm_1.0-9        tableone_0.13.2       \n [7] survey_4.2-1           survival_3.5-5         Matrix_1.5-4          \n[10] MASS_7.3-58.4          marginaleffects_0.12.0 lmtest_0.9-40         \n[13] zoo_1.8-12             knitr_1.42             ggplot2_3.4.2         \n[16] data.table_1.14.8      cobalt_4.5.1           dplyr_1.1.2           \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.3       generics_0.1.3   lattice_0.21-8   digest_0.6.31   \n [5] magrittr_2.0.3   evaluate_0.21    fastmap_1.1.1    jsonlite_1.8.4  \n [9] backports_1.4.1  DBI_1.1.3        fansi_1.0.4      scales_1.2.1    \n[13] cli_3.6.1        mitools_2.4      rlang_1.1.1      crayon_1.5.2    \n[17] munsell_0.5.0    splines_4.3.0    withr_2.5.0      yaml_2.3.7      \n[21] tools_4.3.0      colorspace_2.1-0 vctrs_0.6.2      R6_2.5.1        \n[25] lifecycle_1.0.3  pkgconfig_2.0.3  pillar_1.9.0     gtable_0.3.3    \n[29] glue_1.6.2       Rcpp_1.0.10      xfun_0.39        tibble_3.2.1    \n[33] tidyselect_1.2.0 rstudioapi_0.14  htmltools_0.5.5  rmarkdown_2.21  \n[37] compiler_4.3.0  \n```\n:::\n:::\n\n\n\n## References {.unnumbered}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}