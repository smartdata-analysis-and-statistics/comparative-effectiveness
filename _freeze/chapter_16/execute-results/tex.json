{
  "hash": "97d0c94874248e487f3433f83a3894e1",
  "result": {
    "markdown": "---\ntitle: \"Prediction of individual treatment effect using data from multiple studies\"\nauthors:   \n  - name: Orestis Efthimiou\n    orcid: 0000-0002-0955-7572\n    affiliations:\n      - ref: ubern\naffiliations:\n  - id: smartdas\n    name: Smart Data Analysis and Statistics B.V.\n    city: Utrecht\n  - id: ubern\n    name: Institute of Social and Preventive Medicine (ISPM)\n    city: Bern, Switzerland\nformat:\n  html:\n    toc: true\n    number-sections: true\nexecute:\n  cache: true\nbibliography: 'https://api.citedrive.com/bib/0d25b38b-db8f-43c4-b934-f4e2f3bd655a/references.bib?x=eyJpZCI6ICIwZDI1YjM4Yi1kYjhmLTQzYzQtYjkzNC1mNGUyZjNiZDY1NWEiLCAidXNlciI6ICIyNTA2IiwgInNpZ25hdHVyZSI6ICI0MGFkYjZhMzYyYWE5Y2U0MjQ2NWE2ZTQzNjlhMWY3NTk5MzhhNzUxZDNjYWIxNDlmYjM4NDgwOTYzMzY5YzFlIn0=/bibliography.bib'\n---\n\n\n\nIn this chapter, we discuss statistical methods for developing models to predict patient-level treatment effects using data from multiple randomized and non-randomized studies. We will first present prediction models that assume a constant treatment effect and discuss how to address heterogeneity in baseline risk. Subsequently, we will discuss approaches that allow for treatment effect modification by adopting two different approaches in an IPD-MA context, namely the risk modelling and the effect modelling approach. For both approaches, we will first discuss how to combine IPD from RCTs comparing the same two treatments. We will then discuss how these methods can be extended to include randomized data from multiple treatments, real-world data, and published aggregate data. We will discuss statistical software to implement these approaches and provide example code as supporting information. Real examples will be used throughout to illustrate the main methods.\n\n## Estimating heterogeneous treatment effects in pairwise meta-analysis\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-1_6d16787fec9ba95d7e6bbd216ee3d6a0'}\n\n:::\n\n\n\nWe hereby provide code for estimating patient-level treatment effects for the case when we have patient-level data from multiple randomized trials.\n\n### Example of a continuous outcome\n\n#### Setup\nWe  start by simulating an artificial dataset using the R package **bipd**: \n\n\n\n::: {.cell hash='chapter_16_cache/pdf/ds_eb26119eb794d1c6e5bacfacca07118c'}\n\n```{.r .cell-code}\nlibrary(bipd)\nds <- generate_ipdma_example(type = \"continuous\")\n```\n:::\n\n\n\nLet us have a look at the dataset:\n\n\n::: {.cell hash='chapter_16_cache/pdf/ds2_17e3d14267b7fea5c4f0c0f1bd1b3afe'}\n\n```{.r .cell-code}\nhead(ds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  studyid treat         z1         z2  y\n1       1     0  0.3266390 -1.7236365 11\n2       1     0  0.4951180 -2.2374921 11\n3       1     0 -0.7056270 -1.3584076 11\n4       1     1 -0.9785132 -0.3029899  8\n5       1     0  0.2651324 -0.1735689 11\n6       1     1  1.3853282 -0.2320760  6\n```\n:::\n:::\n\n\n\nThe simulated dataset contains information on the following variables:\n\n- the trial indicator `studyid`\n- the treatment indicator `treat`, which takes the values 0 for control and 1 for active treatment\n- two prognostic variables `z1` and `z2`\n- the continuous outcome `y`\n\n\n\n::: {#tbl-summary-continuous_outcome-data .cell tbl-cap='The simulated dataset with a continuous outcome' hash='chapter_16_cache/pdf/tbl-summary-continuous_outcome-data_6554e8d01aa00dbd58ba41054cc8e25c'}\n::: {.cell-output-display}\n\\begin{tabular}[t]{llll}\n\\toprule\nÂ  & 0 & 1 & Overall\\\\\n\\midrule\n & (N=321) & (N=279) & (N=600)\\\\\n\\addlinespace[0.3em]\n\\multicolumn{4}{l}{\\textbf{z1}}\\\\\n\\hspace{1em}Mean (SD) & 0.0681 (0.967) & 0.0166 (0.983) & 0.0441 (0.974)\\\\\n\\hspace{1em}Median [Min, Max] & 0.0464 [-3.13, 2.87] & -0.0316 [-2.69, 2.50] & 0.0244 [-3.13, 2.87]\\\\\n\\addlinespace[0.3em]\n\\multicolumn{4}{l}{\\textbf{z2}}\\\\\n\\hspace{1em}Mean (SD) & -0.0961 (0.990) & 0.0117 (1.01) & -0.0459 (1.00)\\\\\n\\hspace{1em}Median [Min, Max] & -0.117 [-2.55, 2.52] & 0.0838 [-3.54, 3.38] & -0.0371 [-3.54, 3.38]\\\\\n\\addlinespace[0.3em]\n\\multicolumn{4}{l}{\\textbf{studyid}}\\\\\n\\hspace{1em}1 & 57 (17.8\\%) & 43 (15.4\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}2 & 61 (19.0\\%) & 39 (14.0\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}3 & 50 (15.6\\%) & 50 (17.9\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}4 & 51 (15.9\\%) & 49 (17.6\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}5 & 57 (17.8\\%) & 43 (15.4\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}6 & 45 (14.0\\%) & 55 (19.7\\%) & 100 (16.7\\%)\\\\\n\\bottomrule\n\\end{tabular}\n:::\n:::\n\n\n\n#### Model fitting\nWe synthesize the evidence using a Bayesian random effects meta-analysis model. The model is given in Equation 16.7 of the book. First we need set up the data and create the model:\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAcont1_451d4acc46f27e45715c7316ba403377'}\n\n```{.r .cell-code}\nipd <- with(ds, ipdma.model.onestage(y = y, study = studyid, treat = treat,\n                                     X = cbind(z1, z2), \n                                     response = \"normal\", \n                                     shrinkage = \"none\"), \n                                     type=\"random\")\n```\n:::\n\n\n\nThe JAGS model can be accessed as follows:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAcont2_512bcf79d0a38b99e224681a3e004a78'}\n\n```{.r .cell-code}\nipd$model.JAGS\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfunction () \n{\n    for (i in 1:Np) {\n        y[i] ~ dnorm(mu[i], sigma)\n        mu[i] <- alpha[studyid[i]] + inprod(beta[], X[i, ]) + \n            (1 - equals(treat[i], 1)) * inprod(gamma[], X[i, \n                ]) + d[studyid[i], treat[i]]\n    }\n    sigma ~ dgamma(0.001, 0.001)\n    for (j in 1:Nstudies) {\n        d[j, 1] <- 0\n        d[j, 2] ~ dnorm(delta[2], tau)\n    }\n    sd ~ dnorm(0, 1)\n    T(0, )\n    tau <- pow(sd, -2)\n    delta[1] <- 0\n    delta[2] ~ dnorm(0, 0.001)\n    for (j in 1:Nstudies) {\n        alpha[j] ~ dnorm(0, 0.001)\n    }\n    for (k in 1:Ncovariate) {\n        beta[k] ~ dnorm(0, 0.001)\n    }\n    for (k in 1:Ncovariate) {\n        gamma[k] ~ dnorm(0, 0.001)\n    }\n}\n<environment: 0x000002aa85657fc0>\n```\n:::\n:::\n\n\nWe can fit the treatment effect model as follows:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAcont3_5cc0645c97bdc7aa4fd3e9ab1a4488d3'}\n\n```{.r .cell-code}\nsamples <- ipd.run(ipd, n.chains = 2, n.iter = 20,\n                   pars.save = c(\"alpha\", \"beta\", \"delta\", \"sd\", \"gamma\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 600\n   Unobserved stochastic nodes: 19\n   Total graph size: 6034\n\nInitializing model\n```\n:::\n:::\n\n\n\nHere are the estimated model parameters:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAcont4_9347194362e3ab04c6c4ae86b53e57ce'}\n\n```{.r .cell-code}\nsummary(samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nIterations = 2001:2020\nThinning interval = 1 \nNumber of chains = 2 \nSample size per chain = 20 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n            Mean      SD Naive SE Time-series SE\nalpha[1] 11.0321 0.04281 0.006768       0.007664\nalpha[2]  7.9608 0.05458 0.008630       0.014489\nalpha[3] 10.4386 0.04525 0.007154       0.012180\nalpha[4]  9.6425 0.04047 0.006399       0.006279\nalpha[5] 12.8051 0.05709 0.009027       0.009144\nalpha[6] 15.7531 0.05324 0.008418       0.013281\nbeta[1]   0.1937 0.02572 0.004067       0.004113\nbeta[2]   0.3048 0.01767 0.002793       0.004289\ndelta[1]  0.0000 0.00000 0.000000       0.000000\ndelta[2] -3.1631 0.39061 0.061760       0.083400\ngamma[1] -0.5218 0.03882 0.006138       0.007766\ngamma[2]  0.5545 0.02791 0.004413       0.006817\nsd        0.9859 0.31067 0.049121       0.046491\n\n2. Quantiles for each variable:\n\n            2.5%     25%     50%     75%   97.5%\nalpha[1] 10.9608 11.0077 11.0287 11.0546 11.1227\nalpha[2]  7.8596  7.9252  7.9515  8.0081  8.0494\nalpha[3] 10.3403 10.4122 10.4347 10.4741 10.5208\nalpha[4]  9.5711  9.6176  9.6434  9.6655  9.7222\nalpha[5] 12.7144 12.7776 12.8041 12.8494 12.8866\nalpha[6] 15.6683 15.7274 15.7593 15.7833 15.8413\nbeta[1]   0.1560  0.1732  0.1945  0.2120  0.2302\nbeta[2]   0.2774  0.2932  0.3059  0.3176  0.3322\ndelta[1]  0.0000  0.0000  0.0000  0.0000  0.0000\ndelta[2] -4.0330 -3.3678 -3.1120 -2.9324 -2.3805\ngamma[1] -0.5864 -0.5553 -0.5313 -0.4896 -0.4614\ngamma[2]  0.5134  0.5341  0.5510  0.5742  0.6078\nsd        0.6095  0.7709  0.9309  1.0851  1.7235\n```\n:::\n:::\n\n\n\n#### Prection\nWe can now predict the individualized treatment effect for a new patient with covariate values `z1=1` and `z2=0.5`.\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAcont5_6ddac51f6d288a74a320698215a29c34'}\n\n```{.r .cell-code}\nround(treatment.effect(ipd, samples, newpatient = c(z1 = 1, z2 = 0.5)), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0.025   0.5 0.975 \n-4.28 -3.32 -2.60 \n```\n:::\n:::\n\n\n\nWe can also predict treatment benefit for all patients in the sample, and look at the distribution of predicted benefit.\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/fig-predben_continuous_outcome_948203903e9f71f13a6dcef1c8720add'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\nds <- ds %>% mutate(benefit = NA)\n\nfor (i in seq(nrow(ds))) {\n  newpat <- as.matrix(ds[i, c(\"z1\", \"z2\")])\n  ds$benefit[i] <- treatment.effect(ipd, samples, newpatient = newpat)[\"0.5\"]\n}\n\nggplot(ds, aes(x = benefit)) + geom_histogram() + facet_wrap(~studyid) + \n  xlab(\"Predicted treatment benefit\")\n```\n\n::: {.cell-output-display}\n![Distribution of predicted treatment benefit in each trial](chapter_16_files/figure-pdf/fig-predben_continuous_outcome-1.pdf){#fig-predben_continuous_outcome fig-pos='H'}\n:::\n:::\n\n\n\n#### Penalization\nLet us repeat the analysis, but this time while penalizing the treatment-covariate coefficients using a Bayesian LASSO prior. \n\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAcont6_2aee013c373ec742080d6ffda304f2d0'}\n\n```{.r .cell-code}\nipd <- with(ds, ipdma.model.onestage(y = y, study = studyid, \n                                     treat = treat,\n                                     X = cbind(z1, z2), \n                                     response = \"normal\", \n                                     shrinkage = \"laplace\"), \n            type = \"random\")\n\nsamples <- ipd.run(ipd, n.chains = 2, n.iter = 20, \n                   pars.save = c(\"alpha\", \"beta\", \"delta\", \"sd\", \"gamma\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 600\n   Unobserved stochastic nodes: 20\n   Total graph size: 6039\n\nInitializing model\n```\n:::\n\n```{.r .cell-code}\nround(treatment.effect(ipd, samples, newpatient = c(1,0.5)), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0.025   0.5 0.975 \n-5.07 -3.38 -2.45 \n```\n:::\n:::\n\n\n\n### Example of a binary outcome\n\n\n#### Setup\n\nWe now present the case of a binary outcome. We first generate a dataset as before, using the **bipd** package.\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAbin1_88bee0daf175d9f4d8fa54a262078c5b'}\n\n```{.r .cell-code}\nds2 <- generate_ipdma_example(type = \"binary\")\nhead(ds2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  studyid treat         w1           w2 y\n1       1     0 -1.2303395  1.386443041 1\n2       1     1  0.9995966  0.326715503 0\n3       1     0 -1.1008584  1.060149816 0\n4       1     1  2.8577405 -0.015462936 0\n5       1     1 -1.4637407  0.398844344 0\n6       1     0 -0.3153284  0.006682804 0\n```\n:::\n:::\n\n\n\nThe simulated dataset contains information on the following variables:\n\n- the trial indicator `studyid`\n- the treatment indicator `treat`, which takes the values 0 for control and 1 for active treatment\n- two prognostic variables `w1` and `w2`\n- the binary outcome `y`\n\n\n\n::: {#tbl-summary-binary_outcome-data .cell tbl-cap='The simulated dataset with a binary outcome' hash='chapter_16_cache/pdf/tbl-summary-binary_outcome-data_92ed3cb9b135723d969ff36e34d395b5'}\n::: {.cell-output-display}\n\\begin{tabular}[t]{llll}\n\\toprule\nÂ  & 0 & 1 & Overall\\\\\n\\midrule\n & (N=291) & (N=309) & (N=600)\\\\\n\\addlinespace[0.3em]\n\\multicolumn{4}{l}{\\textbf{w1}}\\\\\n\\hspace{1em}Mean (SD) & 0.00796 (0.958) & 0.0314 (0.897) & 0.0200 (0.926)\\\\\n\\hspace{1em}Median [Min, Max] & -0.00405 [-2.72, 2.78] & 0.0593 [-2.00, 2.86] & 0.0423 [-2.72, 2.86]\\\\\n\\addlinespace[0.3em]\n\\multicolumn{4}{l}{\\textbf{w2}}\\\\\n\\hspace{1em}Mean (SD) & 0.0459 (1.02) & -0.0446 (1.05) & -0.000697 (1.04)\\\\\n\\hspace{1em}Median [Min, Max] & 0.107 [-2.70, 2.68] & -0.0511 [-3.32, 2.67] & 0.000535 [-3.32, 2.68]\\\\\n\\addlinespace[0.3em]\n\\multicolumn{4}{l}{\\textbf{studyid}}\\\\\n\\hspace{1em}1 & 52 (17.9\\%) & 48 (15.5\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}2 & 45 (15.5\\%) & 55 (17.8\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}3 & 51 (17.5\\%) & 49 (15.9\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}4 & 47 (16.2\\%) & 53 (17.2\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}5 & 45 (15.5\\%) & 55 (17.8\\%) & 100 (16.7\\%)\\\\\n\\hspace{1em}6 & 51 (17.5\\%) & 49 (15.9\\%) & 100 (16.7\\%)\\\\\n\\bottomrule\n\\end{tabular}\n:::\n:::\n\n\n\n#### Model fitting\nWe use a Bayesian random effects model with binomial likelihood. This is similar to the model 16.7 of the book, but with a Binomial likelihood, i.e. \n\n$$ \ny_{ij}\\sim Binomial(\\pi_{ij}) \\\\\n$$ \n$$ \nlogit(\\pi_{ij})==a_j+\\delta_j t_{ij}+ \\sum_{l=1}^{L}\\beta_l x_{ij}+ \\sum_{l=1}^{L}\\gamma_l x_{ij} t_{ij}\n$$\nThe remaining of the model is as in the book. \nWe can  penalize the estimated parameters for effect modification ($\\gamma$'s), using a Bayesian LASSO. We can do this using again the *bipd* package:\n\n\n::: {.cell hash='chapter_16_cache/pdf/MAbin2_c10f75c751fa8671fae314bbe3b1ce22'}\n\n```{.r .cell-code}\nipd2 <- with(ds2, ipdma.model.onestage(y = y, study = studyid, treat = treat,\n                                       X = cbind(w1, w2), \n                                       response = \"binomial\", \n                                       shrinkage = \"laplace\"), \n             type=\"random\", hy.prior = list(\"dunif\", 0, 1))\n\nipd2$model.JAGS\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfunction () \n{\n    for (i in 1:Np) {\n        y[i] ~ dbern(p[i])\n        logit(p[i]) <- alpha[studyid[i]] + inprod(beta[], X[i, \n            ]) + (1 - equals(treat[i], 1)) * inprod(gamma[], \n            X[i, ]) + d[studyid[i], treat[i]]\n    }\n    for (j in 1:Nstudies) {\n        d[j, 1] <- 0\n        d[j, 2] ~ dnorm(delta[2], tau)\n    }\n    sd ~ dnorm(0, 1)\n    T(0, )\n    tau <- pow(sd, -2)\n    delta[1] <- 0\n    delta[2] ~ dnorm(0, 0.001)\n    for (j in 1:Nstudies) {\n        alpha[j] ~ dnorm(0, 0.001)\n    }\n    for (k in 1:Ncovariate) {\n        beta[k] ~ dnorm(0, 0.001)\n    }\n    tt <- lambda\n    lambda <- pow(lambda.inv, -1)\n    lambda.inv ~ dunif(0, 5)\n    for (k in 1:Ncovariate) {\n        gamma[k] ~ ddexp(0, tt)\n    }\n}\n<environment: 0x000002aa847ff3e8>\n```\n:::\n\n```{.r .cell-code}\nsamples <- ipd.run(ipd2, n.chains = 2, n.iter = 20, \n                   pars.save = c(\"alpha\", \"beta\", \"delta\", \"sd\", \"gamma\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 600\n   Unobserved stochastic nodes: 19\n   Total graph size: 6637\n\nInitializing model\n```\n:::\n\n```{.r .cell-code}\nsummary(samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nIterations = 2001:2020\nThinning interval = 1 \nNumber of chains = 2 \nSample size per chain = 20 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n             Mean     SD Naive SE Time-series SE\nalpha[1] -0.34078 0.2776  0.04389        0.06585\nalpha[2] -0.80783 0.2718  0.04298        0.07790\nalpha[3] -1.19985 0.3202  0.05063        0.08576\nalpha[4] -0.85804 0.1990  0.03146        0.04716\nalpha[5] -1.06959 0.2987  0.04724        0.10169\nalpha[6] -0.94425 0.3131  0.04951        0.07678\nbeta[1]  -0.03590 0.1000  0.01582        0.01967\nbeta[2]  -0.03756 0.1218  0.01926        0.02130\ndelta[1]  0.00000 0.0000  0.00000        0.00000\ndelta[2] -0.01096 0.4379  0.06924        0.08327\ngamma[1]  0.09028 0.1149  0.01816        0.02171\ngamma[2]  0.21330 0.1498  0.02368        0.02245\nsd        0.78142 0.2498  0.03950        0.07800\n\n2. Quantiles for each variable:\n\n               2.5%      25%      50%      75%   97.5%\nalpha[1] -0.7605646 -0.50432 -0.37277 -0.15051  0.2115\nalpha[2] -1.1484144 -1.00197 -0.86278 -0.60084 -0.2906\nalpha[3] -1.8728435 -1.36581 -1.08526 -0.94346 -0.8677\nalpha[4] -1.2660197 -0.99241 -0.81621 -0.74412 -0.5379\nalpha[5] -1.6683012 -1.25329 -1.04303 -0.81286 -0.6004\nalpha[6] -1.4772417 -1.16204 -0.92320 -0.84119 -0.3009\nbeta[1]  -0.2363999 -0.07803 -0.01780  0.03226  0.1232\nbeta[2]  -0.2262688 -0.13719 -0.04790  0.06893  0.1935\ndelta[1]  0.0000000  0.00000  0.00000  0.00000  0.0000\ndelta[2] -0.9416291 -0.24785  0.02087  0.23443  0.7910\ngamma[1] -0.1021983  0.01017  0.09435  0.19198  0.2604\ngamma[2]  0.0006925  0.10911  0.22227  0.29650  0.4860\nsd        0.4516838  0.58578  0.74924  0.94277  1.2447\n```\n:::\n\n```{.r .cell-code}\nround(treatment.effect(ipd2, samples, newpatient = c(w1= 1.6, w2 = 1.3)), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0.025   0.5 0.975 \n 0.59  1.65  3.32 \n```\n:::\n:::\n\n\n\n\n## Estimating heterogeous treatment effects in network meta-analysis\n###  Example of a continuous outcome\n#### Setup\nWe use again the bipd package to simulate a dataset:\n\n\n::: {.cell hash='chapter_16_cache/pdf/NMA1_5417df822717b59c5df5c5fd16bc2e94'}\n\n```{.r .cell-code}\nds3 <- generate_ipdnma_example(type = \"continuous\")\nhead(ds3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  studyid treat         z1         z2  y\n1       1     1  0.1829614 -0.3583425 11\n2       1     1 -1.3498681 -0.4742485 11\n3       1     1 -0.6371446  0.8219166 11\n4       1     2 -2.2352659 -1.6490255  8\n5       1     2  0.1722712  1.3452323  9\n6       1     2  1.9461896  1.1121450  8\n```\n:::\n:::\n\n\n\nLet us look into the data a bit in more detail:\n\n\n\n::: {#tbl-nma-summary-continuous_outcome-data .cell tbl-cap='The simulated dataset with a continuous outcome' hash='chapter_16_cache/pdf/tbl-nma-summary-continuous_outcome-data_270d8b70d9c6e1e91168064310b9b06c'}\n::: {.cell-output-display}\n\\begin{tabular}[t]{lllll}\n\\toprule\nÂ  & 1 & 2 & 3 & Overall\\\\\n\\midrule\n & (N=349) & (N=355) & (N=296) & (N=1000)\\\\\n\\addlinespace[0.3em]\n\\multicolumn{5}{l}{\\textbf{z1}}\\\\\n\\hspace{1em}Mean (SD) & -0.0323 (1.00) & 0.0113 (0.996) & -0.0787 (0.958) & -0.0306 (0.987)\\\\\n\\hspace{1em}Median [Min, Max] & -0.0262 [-3.17, 2.69] & -0.0127 [-2.67, 3.78] & -0.0860 [-2.41, 2.47] & -0.0318 [-3.17, 3.78]\\\\\n\\addlinespace[0.3em]\n\\multicolumn{5}{l}{\\textbf{z2}}\\\\\n\\hspace{1em}Mean (SD) & -0.0524 (0.981) & -0.0161 (1.02) & -0.0959 (1.05) & -0.0524 (1.02)\\\\\n\\hspace{1em}Median [Min, Max] & -0.0323 [-2.69, 2.55] & -0.0175 [-3.32, 2.95] & -0.139 [-3.14, 2.34] & -0.0511 [-3.32, 2.95]\\\\\n\\addlinespace[0.3em]\n\\multicolumn{5}{l}{\\textbf{studyid}}\\\\\n\\hspace{1em}1 & 46 (13.2\\%) & 54 (15.2\\%) & 0 (0\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}2 & 46 (13.2\\%) & 54 (15.2\\%) & 0 (0\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}3 & 50 (14.3\\%) & 50 (14.1\\%) & 0 (0\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}4 & 54 (15.5\\%) & 0 (0\\%) & 46 (15.5\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}5 & 47 (13.5\\%) & 0 (0\\%) & 53 (17.9\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}6 & 0 (0\\%) & 42 (11.8\\%) & 58 (19.6\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}7 & 0 (0\\%) & 53 (14.9\\%) & 47 (15.9\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}8 & 40 (11.5\\%) & 38 (10.7\\%) & 22 (7.4\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}9 & 37 (10.6\\%) & 27 (7.6\\%) & 36 (12.2\\%) & 100 (10.0\\%)\\\\\n\\hspace{1em}10 & 29 (8.3\\%) & 37 (10.4\\%) & 34 (11.5\\%) & 100 (10.0\\%)\\\\\n\\bottomrule\n\\end{tabular}\n:::\n:::\n\n\n\n#### Model fitting\nWe will use the model shown in Equation 16.8 in the book. In addition, we will use Bayesian LASSO to penalize the treatment-covariate interactions.\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/NMA3_8a07b7ef233770398d7a79a9e689ecab'}\n\n```{.r .cell-code}\nipd3 <- with(ds3, ipdnma.model.onestage(y = y, study = studyid, treat = treat, \n                                        X = cbind(z1, z2), \n                                        response = \"normal\", \n                                        shrinkage = \"laplace\", \n                                        type = \"random\"))\nipd3$model.JAGS\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nfunction () \n{\n    for (i in 1:Np) {\n        y[i] ~ dnorm(mu[i], sigma)\n        mu[i] <- alpha[studyid[i]] + inprod(beta[], X[i, ]) + \n            inprod(gamma[treat[i], ], X[i, ]) + d[studyid[i], \n            treatment.arm[i]]\n    }\n    sigma ~ dgamma(0.001, 0.001)\n    for (i in 1:Nstudies) {\n        w[i, 1] <- 0\n        d[i, 1] <- 0\n        for (k in 2:na[i]) {\n            d[i, k] ~ dnorm(mdelta[i, k], taudelta[i, k])\n            mdelta[i, k] <- delta[t[i, k]] - delta[t[i, 1]] + \n                sw[i, k]\n            taudelta[i, k] <- tau * 2 * (k - 1)/k\n            w[i, k] <- d[i, k] - delta[t[i, k]] + delta[t[i, \n                1]]\n            sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)\n        }\n    }\n    sd ~ dnorm(0, 1)\n    T(0, )\n    tau <- pow(sd, -2)\n    delta[1] <- 0\n    for (k in 2:Ntreat) {\n        delta[k] ~ dnorm(0, 0.001)\n    }\n    for (j in 1:Nstudies) {\n        alpha[j] ~ dnorm(0, 0.001)\n    }\n    for (k in 1:Ncovariate) {\n        beta[k] ~ dnorm(0, 0.001)\n    }\n    lambda[1] <- 0\n    lambda.inv[1] <- 0\n    for (m in 2:Ntreat) {\n        tt[m] <- lambda[m] * sigma\n        lambda[m] <- pow(lambda.inv[m], -1)\n        lambda.inv[m] ~ dunif(0, 5)\n    }\n    for (k in 1:Ncovariate) {\n        gamma[1, k] <- 0\n        for (m in 2:Ntreat) {\n            gamma[m, k] ~ ddexp(0, tt[m])\n        }\n    }\n}\n<environment: 0x000002aa855142f8>\n```\n:::\n\n```{.r .cell-code}\nsamples <- ipd.run(ipd3, n.chains = 2, n.iter = 20, \n                   pars.save = c(\"alpha\", \"beta\", \"delta\", \"sd\", \"gamma\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 1000\n   Unobserved stochastic nodes: 35\n   Total graph size: 10141\n\nInitializing model\n```\n:::\n\n```{.r .cell-code}\nsummary(samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nIterations = 2001:2020\nThinning interval = 1 \nNumber of chains = 2 \nSample size per chain = 20 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n              Mean      SD Naive SE Time-series SE\nalpha[1]   11.0143 0.05351 0.008461       0.012893\nalpha[2]    8.0104 0.04313 0.006819       0.011318\nalpha[3]   10.5057 0.04685 0.007408       0.007344\nalpha[4]    9.5642 0.04372 0.006912       0.006977\nalpha[5]   12.9822 0.03072 0.004858       0.004887\nalpha[6]   13.2670 0.04836 0.007646       0.012434\nalpha[7]    7.3961 0.05204 0.008228       0.014720\nalpha[8]   11.1075 0.05268 0.008330       0.013409\nalpha[9]   10.1329 0.05067 0.008012       0.014126\nalpha[10]   9.1592 0.05562 0.008795       0.017214\nbeta[1]     0.2287 0.01429 0.002259       0.004478\nbeta[2]     0.3171 0.01742 0.002755       0.005921\ndelta[1]    0.0000 0.00000 0.000000       0.000000\ndelta[2]   -2.9582 0.06936 0.010967       0.009455\ndelta[3]   -1.1239 0.07083 0.011200       0.009991\ngamma[1,1]  0.0000 0.00000 0.000000       0.000000\ngamma[2,1] -0.6453 0.02223 0.003516       0.006829\ngamma[3,1] -0.3277 0.01879 0.002971       0.003337\ngamma[1,2]  0.0000 0.00000 0.000000       0.000000\ngamma[2,2]  0.6075 0.02498 0.003950       0.007017\ngamma[3,2]  0.4135 0.01868 0.002954       0.006306\nsd          0.2230 0.05817 0.009198       0.016080\n\n2. Quantiles for each variable:\n\n              2.5%     25%     50%     75%   97.5%\nalpha[1]   10.9302 10.9823 11.0220 11.0479 11.0988\nalpha[2]    7.9224  7.9816  8.0152  8.0369  8.0830\nalpha[3]   10.4128 10.4722 10.5106 10.5439 10.5787\nalpha[4]    9.4920  9.5290  9.5637  9.5982  9.6411\nalpha[5]   12.9236 12.9621 12.9842 13.0013 13.0324\nalpha[6]   13.1556 13.2396 13.2700 13.2984 13.3439\nalpha[7]    7.3262  7.3548  7.3923  7.4279  7.4879\nalpha[8]   11.0004 11.0811 11.1067 11.1433 11.1924\nalpha[9]   10.0257 10.1025 10.1393 10.1667 10.2160\nalpha[10]   9.0730  9.1219  9.1572  9.1931  9.2463\nbeta[1]     0.2016  0.2203  0.2293  0.2358  0.2587\nbeta[2]     0.2853  0.3059  0.3196  0.3301  0.3481\ndelta[1]    0.0000  0.0000  0.0000  0.0000  0.0000\ndelta[2]   -3.1027 -3.0003 -2.9579 -2.9084 -2.8760\ndelta[3]   -1.2442 -1.1743 -1.1340 -1.0820 -0.9850\ngamma[1,1]  0.0000  0.0000  0.0000  0.0000  0.0000\ngamma[2,1] -0.6915 -0.6579 -0.6452 -0.6310 -0.6087\ngamma[3,1] -0.3700 -0.3387 -0.3263 -0.3166 -0.2969\ngamma[1,2]  0.0000  0.0000  0.0000  0.0000  0.0000\ngamma[2,2]  0.5617  0.5949  0.6061  0.6285  0.6471\ngamma[3,2]  0.3834  0.4000  0.4137  0.4247  0.4442\nsd          0.1428  0.1828  0.2184  0.2439  0.3889\n```\n:::\n:::\n\n\n\nAs before, we can use the `treatment.effect()` function of *bipd* to estimate relative effects for new patients. \n\n\n::: {.cell hash='chapter_16_cache/pdf/NMA4_d1c43fa9deeafffba5b5524808af617a'}\n\n```{.r .cell-code}\ntreatment.effect(ipd3, samples, newpatient= c(1,2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`treatment 2`\n    0.025       0.5     0.975 \n-2.525064 -2.418394 -2.266426 \n\n$`treatment 3`\n     0.025        0.5      0.975 \n-0.7388297 -0.6376228 -0.5007683 \n```\n:::\n:::\n\n\nThis gives us the relative effects for all treatments versus the reference. To obtain relative effects between active treatments we need some more coding:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/NMA5_3462ab98706dfac23e73bf5026c8f28e'}\n\n```{.r .cell-code}\nsamples.all=data.frame(rbind(samples[[1]], samples[[2]]))\nnewpatient= c(1,2)\nnewpatient <- (newpatient - ipd3$scale_mean)/ipd3$scale_sd\n\nmedian(\n  samples.all$delta.2.+samples.all$gamma.2.1.*\n    newpatient[1]+samples.all$gamma.2.2.*newpatient[2]\n-\n  (samples.all$delta.3.+samples.all$gamma.3.1.*newpatient[1]+\n     samples.all$gamma.3.2.*newpatient[2])\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -1.765342\n```\n:::\n\n```{.r .cell-code}\nquantile(samples.all$delta.2.+samples.all$gamma.2.1.*\n           newpatient[1]+samples.all$gamma.2.2.*newpatient[2]\n         -(samples.all$delta.3.+samples.all$gamma.3.1.*newpatient[1]+\n             samples.all$gamma.3.2.*newpatient[2])\n         , probs = 0.025)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     2.5% \n-1.940397 \n```\n:::\n\n```{.r .cell-code}\nquantile(samples.all$delta.2.+samples.all$gamma.2.1.*\n           newpatient[1]+samples.all$gamma.2.2.*newpatient[2]\n         -(samples.all$delta.3.+samples.all$gamma.3.1.*newpatient[1]+\n             samples.all$gamma.3.2.*newpatient[2])\n         , probs = 0.975)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   97.5% \n-1.62695 \n```\n:::\n:::\n\n\n\n### Modeling patient-level relative effects using randomized and observational evidence for a network of treatments\n\nWe will now follow Chapter 16.3.5 from the book. In this analysis we will not use penalization, and we will assume fixed effects. For an example with penalization and random effects, see part 2 of this vignettte.\n\n#### Setup\nWe generate a very simple dataset of three studies comparing three treatments. We will assume 2 RCTs and 1 non-randomized trial:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/NMA6_066f20613f7cfec94344a7ad8a080faa'}\n\n```{.r .cell-code}\nds4 <- generate_ipdnma_example(type = \"continuous\")\nds4 <- ds4 %>% filter(studyid %in% c(1,4,10)) %>%\n  mutate(studyid = factor(studyid) %>%\n           recode_factor(\n             \"1\" = \"1\",\n             \"4\" = \"2\",\n             \"10\" = \"3\"),\n         design = ifelse(studyid == \"3\", \"nrs\", \"rct\"))\n```\n:::\n\n\nThe sample size is as follows:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-4_ebffffd227a1d781c49ae29b628c4dad'}\n::: {.cell-output .cell-output-stdout}\n```\n          \n           s1 s2 s3\n  treat A: 41 51 39\n  treat B: 59  0 25\n  treat C:  0 49 36\n```\n:::\n:::\n\n\n\n#### Model fitting\nWe will use the design-adjusted model, equation 16.9 in the book. We will fit a two-stage fixed effects meta-analysis and we will use a variance inflation factor. The code below is used to specify the analysis of each individual study. Briefly, in each study we adjust the treatment effect for the prognostic factors `z1` and `z2`, as well as their interaction with `treat`.\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/NMA7_1b4f162c29ee86a980b7aec6d2b65836'}\n\n```{.r .cell-code}\nlibrary(rjags)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: coda\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLinked to JAGS 4.3.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoaded modules: basemod,bugs\n```\n:::\n\n```{.r .cell-code}\nfirst.stage <- \"\nmodel{\n\nfor (i in 1:N){\n\ty[i] ~ dnorm(mu[i], tau)  \n\tmu[i] <- a + inprod(b[], X[i,]) + inprod(c[,treat[i]], X[i,]) + d[treat[i]] \n}\nsigma ~ dunif(0, 5)\ntau <- pow(sigma, -2)\n\na ~ dnorm(0, 0.001)\n\nfor(k in 1:Ncovariate){\n\tb[k] ~ dnorm(0,0.001)\n}\n\nfor(k in 1:Ncovariate){\n\tc[k,1] <- 0\n}\n\ntauGamma <- pow(sdGamma,-1)\nsdGamma ~ dunif(0, 5)\n\nfor(k in 1:Ncovariate){\n\tfor(t in 2:Ntreat){\n\t\tc[k,t] ~ ddexp(0, tauGamma)\n\t}\n}\n\nd[1] <- 0\nfor(t in 2:Ntreat){\n\td[t] ~ dnorm(0, 0.001)\n}\n}\"\n```\n:::\n\n\n\nSubsequently, we estimate the relative treatment effects in the first (randomized) study comparing treatments A and B:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-5_eb9a34cdfc7118a0bee098b2bac0597a'}\n\n:::\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-6_657db273047f01c844aafaf8cdd9f4a6'}\n\n```{.r .cell-code}\nmodel1.spec <- textConnection(first.stage) \ndata1 <- with(ds4 %>% filter(studyid == 1), \n              list(y = y,\n                   N = length(y), \n                   X = cbind(z1,z2),  \n                   treat = treat,\n                   Ncovariate = 2, \n                   Ntreat = 2))\njags.m <- jags.model(model1.spec, data = data1, n.chains = 2, n.adapt = 500,\n                     quiet =  TRUE)\nparams <- c(\"d\", \"c\") \nsamps4.1 <- coda.samples(jags.m, params, n.iter = 50)\nsamps.all.s1 <- data.frame(as.matrix(samps4.1))\n\nsamps.all.s1 <- samps.all.s1[, c(\"c.1.2.\", \"c.2.2.\", \"d.2.\")]\ndelta.1 <- colMeans(samps.all.s1)\ncov.1 <- var(samps.all.s1)\n```\n:::\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-7_a4af3928004c37b210ce52e89d48ab9a'}\n\n:::\n\n\n\nWe repeat the analysis for the second (randomized) study comparing treatments A and C:\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-8_8dd897e98274774398289aa126be42e0'}\n\n```{.r .cell-code}\nmodel1.spec <- textConnection(first.stage) \ndata2 <- with(ds4 %>% filter(studyid == 2), \n              list(y = y,\n                   N = length(y), \n                   X = cbind(z1,z2),  \n                   treat = ifelse(treat == 3, 2, treat),\n                   Ncovariate = 2, \n                   Ntreat = 2))\njags.m <- jags.model(model1.spec, data = data2, n.chains = 2, n.adapt = 100,\n                     quiet =  TRUE)\nparams <- c(\"d\", \"c\") \nsamps4.2 <- coda.samples(jags.m, params, n.iter = 50)\nsamps.all.s2 <- data.frame(as.matrix(samps4.2))\nsamps.all.s2 <- samps.all.s2[, c(\"c.1.2.\", \"c.2.2.\", \"d.2.\")]\ndelta.2 <- colMeans(samps.all.s2)\ncov.2 <- var(samps.all.s2)\n```\n:::\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-9_5aa2e93b0671f134731a7f6eb9ffaa03'}\n\n:::\n\n\n\nFinally, we analyze the third (non-randomized) study comparing treatments A, B, and C:\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-10_95cd26bcf5b98951c8ec967424d4d54c'}\n\n```{.r .cell-code}\nmodel1.spec <- textConnection(first.stage) \ndata3 <- with(ds4 %>% filter(studyid == 3), \n              list(y = y,\n                   N = length(y), \n                   X = cbind(z1,z2),  \n                   treat = treat,\n                   Ncovariate = 2, \n                   Ntreat = 3))\njags.m <- jags.model(model1.spec, data = data3, n.chains = 2, n.adapt = 100,\n                     quiet = TRUE)\nparams <- c(\"d\", \"c\") \nsamps4.3 <- coda.samples(jags.m, params, n.iter = 50)\nsamps.all.s3 <- data.frame(as.matrix(samps4.3))\n\nsamps.all.s3 <- samps.all.s3[, c(\"c.1.2.\", \"c.2.2.\", \"d.2.\", \"c.1.3.\", \n                                 \"c.2.3.\", \"d.3.\")]\ndelta.3 <- colMeans(samps.all.s3)\ncov.3 <- var(samps.all.s3)\n```\n:::\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-11_e41f2f791f469c3f0ba2d7b907374470'}\n\n:::\n\n\n\nThe corresponding treatment effect estimates are depicted below:\n\n\n\n::: {#tbl-results_nma_stage1 .cell tbl-cap='Treatment effect estimates.' hash='chapter_16_cache/pdf/tbl-results_nma_stage1_7adc5c5051aba5809515ede32c34ac6a'}\n::: {.cell-output-display}\n\\begin{table}[!h]\n\\centering\n\\begin{tabular}{lll}\n\\toprule\nstudy & B versus A & C versus A\\\\\n\\midrule\nstudy 1 & -3.012 (SE =  0.062 ) & \\\\\nstudy 2 &  & -1.228 (SE =  0.051 )\\\\\nstudy 3 & -3.013 (SE =  0.082 ) & -1.052 (SE =  0.073 )\\\\\n\\bottomrule\n\\end{tabular}\n\\end{table}\n:::\n:::\n\n\n\nWe can now fit the second stage of the network meta-analysis. The corresponding JAGS model is specified below:\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-13_b022276918e0a27bc2174d9d5aee197e'}\n\n```{.r .cell-code}\nsecond.stage <-\n\"model{\n  \n  #likelihood\n  y1 ~ dmnorm(Mu1, Omega1)\n  y2 ~ dmnorm(Mu2, Omega2)\n  y3 ~ dmnorm(Mu3, Omega3*W)\n\n  \n  Omega1 <- inverse(cov.1)\n  Omega2 <- inverse(cov.2)\n  Omega3 <- inverse(cov.3)\n\n  Mu1 <- c(gamma[,1], delta[2])\n  Mu2 <- c(gamma[,2], delta[3])  \n  Mu3 <- c(gamma[,1], delta[2],gamma[,2], delta[3])\n  \n  #parameters\n  for(i in 1:2){\n    gamma[i,1] ~ dnorm(0, 0.001)\n    gamma[i,2] ~ dnorm(0, 0.001)\n  }\n  \n  delta[1] <- 0\n  delta[2] ~ dnorm(0, 0.001)\n  delta[3] ~ dnorm(0, 0.001)\n  \n}\n\"\n```\n:::\n\n\n\nWe can fit as follows:\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-14_cb277a12d067bd69f25acea6565edde5'}\n\n```{.r .cell-code}\nmodel1.spec <- textConnection(second.stage) \ndata3 <- list(y1 = delta.1, y2 = delta.2, y3 = delta.3, \n              cov.1 = cov.1, cov.2 = cov.2, cov.3 = cov.3, W = 0.5)\n\njags.m <- jags.model(model1.spec, data = data3, n.chains = 2, n.adapt = 50,\n                     quiet = TRUE)\nparams <- c(\"delta\", \"gamma\") \nsamps4.3 <- coda.samples(jags.m, params, n.iter = 50)\n```\n:::\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-15_3c97194d01dcf80e8f209b55479f9072'}\n\n```{.r .cell-code}\nsummary(samps4.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nIterations = 1:50\nThinning interval = 1 \nNumber of chains = 2 \nSample size per chain = 50 \n\n1. Empirical mean and standard deviation for each variable,\n   plus standard error of the mean:\n\n              Mean      SD Naive SE Time-series SE\ndelta[1]    0.0000 0.00000 0.000000       0.000000\ndelta[2]   -3.0479 0.06413 0.006413       0.007445\ndelta[3]   -1.1894 0.04620 0.004620       0.004642\ngamma[1,1] -0.8124 0.05418 0.005418       0.005446\ngamma[2,1]  0.8390 0.07016 0.007016       0.007048\ngamma[1,2] -0.4248 0.06481 0.006481       0.006486\ngamma[2,2]  0.3830 0.05754 0.005754       0.005753\n\n2. Quantiles for each variable:\n\n              2.5%     25%     50%     75%   97.5%\ndelta[1]    0.0000  0.0000  0.0000  0.0000  0.0000\ndelta[2]   -3.1476 -3.0843 -3.0490 -3.0206 -2.9350\ndelta[3]   -1.2775 -1.2212 -1.1912 -1.1595 -1.1086\ngamma[1,1] -0.9119 -0.8504 -0.8097 -0.7759 -0.6993\ngamma[2,1]  0.6673  0.8060  0.8435  0.8867  0.9439\ngamma[1,2] -0.5186 -0.4632 -0.4402 -0.3948 -0.2968\ngamma[2,2]  0.3057  0.3550  0.3932  0.4151  0.4543\n```\n:::\n\n```{.r .cell-code}\n# calculate  treatment effects\nsamples.all=data.frame(rbind(samps4.3[[1]], samps4.3[[2]]))\nnewpatient= c(1,2)\n\nmedian(\n  samples.all$delta.2.+samples.all$gamma.1.1.*newpatient[1]+\n    samples.all$gamma.2.1.*newpatient[2]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -2.159397\n```\n:::\n\n```{.r .cell-code}\nquantile(samples.all$delta.2.+samples.all$gamma.1.1.*newpatient[1]+\n           samples.all$gamma.2.1.*newpatient[2]\n         , probs = 0.025)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     2.5% \n-2.498814 \n```\n:::\n\n```{.r .cell-code}\nquantile(samples.all$delta.2.+samples.all$gamma.1.1.*newpatient[1]+\n           samples.all$gamma.2.1.*newpatient[2]\n         , probs = 0.975)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    97.5% \n-1.966954 \n```\n:::\n:::\n\n\n\n\n## Version info {.unnumbered}\nThis chapter was rendered using the following version of R and its packages:\n\n\n\n::: {.cell hash='chapter_16_cache/pdf/unnamed-chunk-16_e140f4c4eb546b4d74f49a4e100cd802'}\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.3 (2023-03-15 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=Dutch_Netherlands.utf8  LC_CTYPE=Dutch_Netherlands.utf8   \n[3] LC_MONETARY=Dutch_Netherlands.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=Dutch_Netherlands.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] rjags_4-14       coda_0.19-4      ggplot2_3.4.2    bipd_0.3        \n[5] kableExtra_1.3.4 dplyr_1.1.2      table1_1.4.3    \n\nloaded via a namespace (and not attached):\n [1] pillar_1.9.0      compiler_4.2.3    tools_4.2.3       digest_0.6.31    \n [5] gtable_0.3.3      lattice_0.21-8    jsonlite_1.8.5    evaluate_0.21    \n [9] lifecycle_1.0.3   tibble_3.2.1      viridisLite_0.4.2 pkgconfig_2.0.3  \n[13] rlang_1.1.1       cli_3.6.1         rstudioapi_0.14   yaml_2.3.7       \n[17] mvtnorm_1.2-2     xfun_0.39         fastmap_1.1.1     withr_2.5.0      \n[21] httr_1.4.6        stringr_1.5.0     knitr_1.43        xml2_1.3.4       \n[25] generics_0.1.3    vctrs_0.6.3       systemfonts_1.0.4 grid_4.2.3       \n[29] webshot_0.5.4     tidyselect_1.2.0  svglite_2.1.1     glue_1.6.2       \n[33] R6_2.5.1          fansi_1.0.4       rmarkdown_2.22    Formula_1.2-5    \n[37] farver_2.1.1      magrittr_2.0.3    scales_1.2.1      codetools_0.2-19 \n[41] htmltools_0.5.5   rvest_1.0.3       colorspace_2.1-0  labeling_0.4.2   \n[45] utf8_1.2.3        stringi_1.7.12    munsell_0.5.0    \n```\n:::\n:::\n\n\n\n## References {.unnumbered}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}