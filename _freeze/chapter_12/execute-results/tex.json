{
  "hash": "45969b5674fb723f88748ecd91746597",
  "result": {
    "markdown": "---\ntitle: \"Dealing with irregular and informative visits\"\nauthor: \"Thomas Debray\"\nformat:\n  html:\n    toc: true\n    number-sections: true\neditor: visual\nexecute:\n  cache: true\n---\n\n\n\n\n\n# Introduction\n\nWe first load the required packages\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-2_45692c6039d8c413b6279c21d3d801ab'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(broom)\nlibrary(ggplot2)\nlibrary(mice)\n```\n:::\n\n\n\n# Example dataset\n\nIn this example dataset, we have a discrete outcome `y` that is affected by its baseline value `edss`, age, sex, and the treatment duration `time`.\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-3_1526bbc1f8585d54a5444254d7a54e00'}\n\n```{.r .cell-code}\nset.seed(9843626)\n\ndataset  <- sim_data_EDSS(npatients = 500,\n                          ncenters = 10,\n                          follow_up = 12*5, # Total follow-up (number of months)\n                          sd_a_t = 0.5,   # DGM - Within-visit variation in EDSS scores\n                          baseline_EDSS = 1.3295,    # DGM - Mean baseline EDDS score\n                          sd_alpha_ij = 1.46,    # DGM - Between-subject variation in baseline EDSS\n                          sd_beta1_j = 0.20,    # DGM - Between-site variation in baseline EDSS\n                          mean_age = 42.41,\n                          sd_age = 10.53,\n                          min_age = 18,\n                          beta_age = 0.05, # DGM - prognostic effect of age\n                          beta_t = 0.014,  # DGM - prognostic effect of time\n                          beta_t2 = 0,    # DGM - prognostic effect of time squared\n                          delta_xt = 0, # DGM - interaction treatment time\n                          delta_xt2 = 0, # 0.0005    # DGM - interaction treatment time2\n                          p_female = 0.75, \n                          beta_female = -0.2 ,  ## DGM - prognostic effect of male sex\n                          delta_xf = 0,      ## DGM - interaction sex treatment       \n                          rho = 0.8,             # DGM - autocorrelation of between alpha_tij\n                          corFUN = corAR1,       # DGM - correlation structure of the latent EDSS scores\n                          tx_alloc_FUN = treatment_alloc_confounding_v2 ) ## or treatment_alloc_randomized\n```\n:::\n\n\n\nWe remove `y` according to the informative visit process that depends on the received treatment, gender, and age.\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-4_f295ae76a441c1c1828d4d91659ad8f8'}\n\n```{.r .cell-code}\ndataset_visit <- censor_visits_a5(dataset, seed = 12345) %>% \n  dplyr::select(-y) %>%\n  mutate(time_x = time*x)\n```\n:::\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-5_b7d9182914c0467cc53bc69aa4ca623c'}\n\n:::\n\n\n\nIn the censored data, a total of 17 out of 5000 patients have a visit at `time=60`.\n\n# Estimation of treatment effect\n\nWe will estimate the marginal treatment effect at time `time=60`.\n\n## Original data\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-6_3427b46cdda16101efa63f7bcafb58d3'}\n\n```{.r .cell-code}\norigdat60 <- dataset %>% filter(time == 60)\n\n# Predict probability of treatment allocation\nfitps <- glm(x ~ age + sex + edss, family = 'binomial', \n             data = origdat60)\n\n# Derive the propensity score\norigdat60 <- origdat60 %>% mutate(ipt = ifelse(x == 1, 1/predict(fitps, type = 'response'),\n                                               1/(1-predict(fitps, type = 'response'))))\n\n# Estimate \nfit_ref_m <- tidy(lm(y ~ x, weight = ipt, data = origdat60), conf.int = TRUE) \n```\n:::\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-7_81ec20e43e56ec2a49b6b326963b835c'}\n\n:::\n\n\n\n## doubly-weighted marginal treatment effect\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-8_a2202ef88535533131d3f05002b0ac69'}\n\n```{.r .cell-code}\nobsdat60 <- dataset_visit %>% mutate(visit = ifelse(is.na(y_obs),0,1)) %>% filter(time == 60)\n\ngamma <- glm(visit ~ x + sex + age + edss, family = 'binomial', data = obsdat60)$coef   \n\nobsdat60 <- obsdat60 %>% mutate(rho_i = 1/exp(gamma[\"(Intercept)\"] +\n                                                          gamma[\"x\"]*x +\n                                                          gamma[\"sex\"]*sex +\n                                                          gamma[\"age\"]*age))\n\n# Predict probability of treatment allocation\nfitps <- glm(x ~ age + sex + edss, family='binomial', data = obsdat60)\n\n# Derive the propensity score\nobsdat60 <- obsdat60 %>% mutate(ipt = ifelse(x==1, 1/predict(fitps, type='response'),\n                                            1/(1-predict(fitps, type='response'))))\n\n\nfit_w <- tidy(lm(y_obs ~ x, weights = ipt*rho_i, data = obsdat60), conf.int = TRUE)\n```\n:::\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-9_823a683be1aa31c03cffb3a7b26b37c8'}\n\n:::\n\n\n\n## Multilevel multiple imputation\n\nWe impute the entire vector of `y_obs` for all 61 potential visits and generate 10 imputed datasets. Note: `mlmi` currently does not support imputation of treatment-covariate interaction terms.\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-10_ae76026ee43c4ed2f82b50dfdae5c844'}\n\n```{.r .cell-code}\nimp <- impute_y_mice_3l(dataset_visit, seed = 12345)\n```\n:::\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-11_9737bfcd0c19d18b90ac1e06526d5f19'}\n\n:::\n\n\n\nWe can now estimate the treatment effect in each imputed dataset\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-12_5cded1a3558a80420f8c2b6384bf4027'}\n\n```{.r .cell-code}\n# Predict probability of treatment allocation\nfitps <- glm(x ~ age + sex + edss, family='binomial', data = dataset_visit)\n  \n# Derive the propensity score\ndataset_visit <- dataset_visit %>% mutate(ipt = ifelse(x==1, 1/predict(fitps, type='response'),\n                                                       1/(1-predict(fitps, type='response'))))\n  \nQ <- U <- rep(NA, 10) # Error variances\n\nfor (i in seq(10)) {\n  dati <- cbind(dataset_visit[,c(\"x\",\"ipt\",\"time\")], y_imp = imp[,i]) %>% filter(time == 60)\n  \n  # Estimate \n  fit <- tidy(lm(y_imp ~ x, weight = ipt, data = dati), conf.int = TRUE) \n  \n  Q[i] <- fit %>% filter(term == \"x\") %>% pull(estimate)\n  U[i] <- (fit %>% filter(term == \"x\") %>% pull(std.error))**2\n}\n\nfit_mlmi <- pool.scalar(Q = Q, U = U)\n```\n:::\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-13_2973c1afcd57bfbf8fa68dab0fc38e13'}\n\n:::\n\n\n\n# Reproduce the results using all data to compute the marginal effect with IIV-weighted\n\n## doubly -weighted marginal treatment effect total\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-14_fe979db78349a04b193363a696d13daa'}\n\n```{.r .cell-code}\nobsdatall <- dataset_visit %>% mutate(visit = ifelse(is.na(y_obs),0,1))  \ngamma <- glm(visit ~ x + sex + age + edss, family = 'binomial', data = obsdatall)$coef   \nobsdatall <- obsdatall %>% mutate(rho_i = 1/exp(gamma[\"(Intercept)\"] +\n                                                gamma[\"x\"]*x +\n                                                gamma[\"sex\"]*sex +\n                                                gamma[\"age\"]*age))\n# Predict probability of treatment allocation\nfitps <- glm(x ~ age + sex + edss, family='binomial', data = obsdatall)\n# Derive the propensity score\nobsdatall <- obsdatall %>% mutate(ipt = ifelse(x==1, 1/predict(fitps, type='response'),\n                                             1/(1-predict(fitps, type='response'))))\nfit_w <- tidy(lm(y_obs ~ x, weights = ipt*rho_i, data = obsdatall), conf.int = TRUE)\n```\n:::\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-15_41010dee05fd0a8ff0483a1fe7bac575'}\n\n:::\n\n\n\n# Results\n\n\n\n::: {.cell hash='chapter_12_cache/pdf/unnamed-chunk-16_99a43af76f33aa30ac30227bb50576a2'}\n::: {.cell-output-display}\n![](chapter_12_files/figure-pdf/unnamed-chunk-16-1.pdf)\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}