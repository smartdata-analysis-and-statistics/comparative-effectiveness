---
title: "Dealing with missing data"
authors:   
  - name: Johanna Munoz
    affiliations:
      - ref: julius
  - name: Thomas Debray
    orcid: 0000-0002-1790-2719
    affiliations:
      - ref: smartdas
affiliations:
  - id: smartdas
    name: Smart Data Analysis and Statistics B.V.
    city: Utrecht
  - id: julius
    name: Julius Center for Health Sciences and Primary Care
    city: Utrecht
format:
  html:
    toc: true
    number-sections: true
execute:
  cache: true
---

```{r}
#| include: FALSE
library(kableExtra)
library(table1)
```

## Main Analysis

The main objective of this analysis is to assess whether the number of episodes (y) occurring within specific time periods (years) differs between the treatment groups (1: DMF and 0: TERI). To address potential confounding factors, the researchers consider variables such as patient age, the log of premedical cost (`logPremedicalcost`), previous DMT efficacy (`prevDMTefficacy`), and the number of episodes in previous relapses (prerelapseNum).

When estimating treatment effects from observational data, an assumption is made that the patient populations in both treatment groups are as similar as possible. Various methods for balancing data across treatment groups are proposed, including matching, inverse propensity weighting, stratification, and regression adjustment.

In this case, the focus is specifically on the matching method, which offers advantages over regression adjustment by potentially alleviating issues related to model mis-specification. This includes addressing non-linear relationships between certain confounders and the outcome variable and accounting for treatment effects that may depend on specific confounders (treatment-confounder interaction terms). Propensity scores are used to match subjects in the treatment groups.

Moreover, intentionally introducing incomplete covariate variables in this example adds complexity to the propensity score estimation. Depending on the propensity score estimation technique employed, it may be necessary to incorporate an imputation step. For instance, logistic regression estimation requires complete data for all observations, while XGBoost is robust to missing data \cite{zhao_propensity_2021}.

To estimate marginal treatment effects, the g-computation method is employed \cite{snowden_implementation_2011}. This method involves specifying a model for the outcome dependent on the treatment and covariates. The potential outcomes, i.e., the predicted values of the outcome on treatment ($y_i^1$) and control ($y_i^0$) for each sample unit $i$, are estimated. The marginal treatment effect is then calculated by contrasting the averaged estimated potential outcomes.


In this example, we consider the estimation of comparative treatment effects in the absence of treatment-effect heterogeneity.


## Estimation workflow

The proposed workflow consists of the following steps:

![Estimation Workflow](resources/chapter 09/Workflow.png)

1.  **Data Exploration:** In this step, we examine the observed data to comprehend the variables within the dataset. Our primary focus lies on identifying missing patterns and relationships among observed variables, including missing indicator variables and others. This exploration aids in discerning the most plausible missing mechanisms and suitable imputation techniques. Additionally, field experts' insights may be incorporated to enhance understanding of the missing process, potentially considering MNAR assumptions.
2.  **Imputation:** It is essential to evaluate whether the imputation procedure is necessary or if simpler methods, such as complete case analysis, are more suitable. In case imputation procedures are required, selecting plausible imputation methods that align with the main model analysis is crucial. This involves choosing individual imputation methods for each incomplete variable, determining the predictor variables on the imputation model. Pre_imputation (where imputation values can be deterministically derived from other variables) and Post-imputation (e.g.ensuring imputed values fall within a reasonable range) steps may also considered.
3.  **Data Balancing:** Several methods, including PS matching or inverse weighting propensity score, can be utilized. It is required to evaluate the balance, which could be done via visual inspection.(eg.cobalt package). In this example, we estimate propensity scores using logistic regression. For most balancing procedures in R, counterparts specifically designed for imputed datasets are available, such as those in the matchthem R package, which includes PS matching and IPW as done in the matchit R package.
4.  **Model Fit:** : It is fit a model to predict the outcomes for each sample unit under each possible treatment value (DMF and TERI), as predictors include the treatment and optionally the baseline covariates and also the propensity score.
5.  **Treatment Estimation & Pooling:** For simplicity in this tutorial, we will use the comparison functions from the R **matchingmethods** package \cite{arel_marginaleffects_2023}, which can be used for completed data and also from outputs from the imputation process. In the last case, internally the functions calculate the treatment effects on each imputed dataset and pool the estimates using Rubin's Rules.

Let's start by preparing the R environment. All the functions used in this tutorial can be found in the resource file `functions.r`.

```{r}
#| warning: false
#| echo: true
# Load the required packages and additional functions
source("resources/chapter 09/functions.r") 
```

## Homogeneous Treatment Effect

In this example, we focus on estimating comparative treatment effects in the absence of heterogeneous treatment effects (HTE).


### Generating an Observational Dataset

We can simulate an observational dataset of $N = 3000$ patients as follows:

```{r hom gendata}
data_hom <- generate_data(n = 3000, seed = 1234) 
```

The **generate_data()** function allows the specification of various treatment effect options, easily adjustable by modifying the beta parameter. In this instance, we assume a consistent treatment effect across the entire target population. This dataset currently contains no missing values.

The simulated dataset comprises two treatment groups with variations in baseline characteristics. For example, the figure below illustrates baseline imbalances in covariates such as age.

```{r hom plotdata}
#| fig.width: 6
#| fig.height: 6
#| fig.align: center
#| fig.cap: Figure 1:Distribution of confounders and outcome variable
#| echo: false
fplot <- plot_dis(data = data_hom)  #Age density
fplot
```

We can calculate the treatment effect on the complete observed dataset. To do this, we start by balancing the dataset using Propensity Score matching. In this case, the propensity score model uses confounder variables only: `age`, `gender`, `prevDMTefficacy`, `logPremedicalcost`, and `prerelapseNum`.

```{r full1}
## Apply Matching on the PS for the ATE
mF <- matchit(  treatment ~ age + gender + prevDMTefficacy + logPremedicalcost + prerelapseNum, 
                data = data_hom,
                family = binomial,
                method = "full",
                caliper = 0.2,
                estimand = "ATE",
                replace = FALSE) 

## Extract matched data
mdata <- match.data(mF)
```

Then, we proceed to model estimation. In this case, a Poisson model is used with the form:

$$\begin{eqnarray}count_i\sim& Poisson(\lambda_i)\end{eqnarray}$$ $$\begin{eqnarray} log(\lambda_i) &=& \beta_0 + \beta_1treatment_i + \beta_2age + \beta_3gender \\ &+& \beta_4prevDMTefficacy + \beta_5logPremedicalcost
\\ &+& \beta_6prerelapseNum + \beta_7numSymptoms + offset(log(years)),\end{eqnarray}$$

Since patient measurements were recorded over varying time frames, the natural logarithm of the years of evaluation is incorporated as an offset in the model. The model is fitted with a glm function, and we include the treatment and the baseline covariates as predictors, which are optional if the data is well balanced. Additionally, it is necessary to specify the matching weights in the glm function.

```{r full2}
# Model fit
fit_mod <- glm(as.formula("y ~ treatment + gender + age + logPremedicalcost + prerelapseNum + prevDMTefficacy + numSymptoms + offset(log(years))"),
                 family = poisson(link = "log"),
                 data = mdata,
                 weights = weights)
```

Typically, Poisson models adjust standard errors using robust standard errors to accommodate small values arising from the equidispersion assumption. This correction can be directly applied to the model using the vcovCL() function \cite{zeileis_sandwich_2022}. However, given that we will calculate the treatment effect using the functions of the **marginaleffects** package, this step becomes redundant. This package allows specifying HC3 sandwich standard errors during treatment estimation.

Finally, we calculate the Average Treatment Effect (ATE). The ATE is defined as $$\tau_{ATE}=E(y_i^1-y_i^0)$$

But this cannot be directly extracted from the $\beta_1$ parameter, as the model has $log(\lambda)$ as the response. We estimate it as: $$\tau_{ATE}=E(\lambda^1_i-\lambda^0_i)$$ This can be done with the function **avg_comparisons()**, from the R package marginaleffect, that calculates the potential outcomes for each unit sample and then combines them to summarize the average effect.

```{r full3}
# Estimation of treatment effects with robust standard errors
ATE <- avg_comparisons(fit_mod, 
                       variables = list(treatment = c("TERI","DMF")),
                       vcov = "HC3",
                       newdata = mdata,
                       wts = "weights")

result_ATE <- data.frame( ATE,
                          analysis = "Full Data")

```

Henceforth, for ease of explanation, we will use the function **TE_estimation()** attached to the function code that performs all the previous estimation steps at once.


## Version info {.unnumbered}
This chapter was rendered using the following version of R and its packages:

```{r}
#| echo: false
#| message: false
#| warning: false
sessionInfo()
```
